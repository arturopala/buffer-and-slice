Index.PACKAGES = {"com" : [], "com.github" : [], "com.github.arturopala" : [], "com.github.arturopala.bufferandslice" : [{"name" : "com.github.arturopala.bufferandslice.ArrayBuffer", "shortDescription" : "Growable, mutable array of values.", "members_class" : [{"label" : "toSlice", "tail" : "(): Slice[T]", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.toSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#toSlice:com.github.arturopala.bufferandslice.Slice[T]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#toArray:Array[T]", "kind" : "def"}, {"label" : "ensureIndex", "tail" : "(index: Int): Unit", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.ensureIndex", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#ensureIndex(index:Int):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#apply(index:Int):T", "kind" : "def"}, {"label" : "array", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.array", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#array:Array[T]", "kind" : "def"}, {"member" : "com.github.arturopala.bufferandslice.ArrayBuffer#<init>", "error" : "unsupported entity"}, {"label" : "shiftLeft", "tail" : "(index: Int, distance: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftLeft", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#shiftLeft(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "shiftRight", "tail" : "(index: Int, distance: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#shiftRight(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "insertArray", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, sourceArray: Array[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.insertArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#insertArray(index:Int,sourceIndex:Int,insertLength:Int,sourceArray:Array[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#toString():String", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.update", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#update(index:Int,value:T):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "pop", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.pop", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#pop:T", "kind" : "final def"}, {"label" : "peek", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#peek:T", "kind" : "final def"}, {"label" : "push", "tail" : "(value: T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.push", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#push(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "store", "tail" : "(value: T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.store", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#store(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, insertLength: Int, iterator: Iterator[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#insertFromIterator(index:Int,insertLength:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertValues", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, source: (Int) => T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertValues", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#insertValues(index:Int,sourceIndex:Int,insertLength:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "appendIterable", "tail" : "(iterable: Iterable[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendIterable", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#appendIterable(iterable:Iterable[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(iterator: Iterator[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#appendFromIterator(iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSequence", "tail" : "(values: IndexedSeq[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSequence", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#appendSequence(values:IndexedSeq[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendArray", "tail" : "(values: Array[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#appendArray(values:Array[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(value: T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.append", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#append(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.reset", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#reset:Int", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.top", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#top:Int", "kind" : "final def"}, {"label" : "set", "tail" : "(index: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.set", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#set(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.length", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#length:Int", "kind" : "final def"}, {"label" : "modifyRange", "tail" : "(fromIndex: Int, toIndex: Int, f: (T) => T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRange", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#modifyRange(fromIndex:Int,toIndex:Int,f:T=>T):Buffer.this.type", "kind" : "def"}, {"label" : "modify", "tail" : "(index: Int, f: (T) => T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modify", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#modify(index:Int,f:T=>T):Buffer.this.type", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (T) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html", "kind" : "class"}, {"name" : "com.github.arturopala.bufferandslice.ArrayBufferLike", "trait" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html", "kind" : "trait", "members_trait" : [{"label" : "shiftLeft", "tail" : "(index: Int, distance: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftLeft", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#shiftLeft(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "shiftRight", "tail" : "(index: Int, distance: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#shiftRight(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "insertArray", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, sourceArray: Array[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.insertArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#insertArray(index:Int,sourceIndex:Int,insertLength:Int,sourceArray:Array[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#toString():String", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.update", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#update(index:Int,value:T):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "pop", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.pop", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#pop:T", "kind" : "final def"}, {"label" : "peek", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#peek:T", "kind" : "final def"}, {"label" : "push", "tail" : "(value: T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.push", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#push(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "store", "tail" : "(value: T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.store", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#store(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, insertLength: Int, iterator: Iterator[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#insertFromIterator(index:Int,insertLength:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertValues", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, source: (Int) => T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertValues", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#insertValues(index:Int,sourceIndex:Int,insertLength:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "appendIterable", "tail" : "(iterable: Iterable[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendIterable", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#appendIterable(iterable:Iterable[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(iterator: Iterator[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#appendFromIterator(iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSequence", "tail" : "(values: IndexedSeq[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSequence", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#appendSequence(values:IndexedSeq[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendArray", "tail" : "(values: Array[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#appendArray(values:Array[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(value: T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.append", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#append(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.reset", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#reset:Int", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.top", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#top:Int", "kind" : "final def"}, {"label" : "set", "tail" : "(index: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.set", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#set(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.length", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#length:Int", "kind" : "final def"}, {"label" : "modifyRange", "tail" : "(fromIndex: Int, toIndex: Int, f: (T) => T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRange", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#modifyRange(fromIndex:Int,toIndex:Int,f:T=>T):Buffer.this.type", "kind" : "def"}, {"label" : "modify", "tail" : "(index: Int, f: (T) => T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modify", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#modify(index:Int,f:T=>T):Buffer.this.type", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (T) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "array", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.array", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#array:Array[T]", "kind" : "abstract def"}, {"label" : "toSlice", "tail" : "(): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.toSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#toSlice:com.github.arturopala.bufferandslice.Slice[T]", "kind" : "abstract def"}, {"label" : "toArray", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#toArray:Array[T]", "kind" : "abstract def"}, {"label" : "ensureIndex", "tail" : "(index: Int): Unit", "member" : "com.github.arturopala.bufferandslice.Buffer.ensureIndex", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#ensureIndex(index:Int):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.Buffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#apply(index:Int):T", "kind" : "abstract def"}], "shortDescription" : "Common buffer functions impl for array-backend buffers."}, {"name" : "com.github.arturopala.bufferandslice.ArrayOps", "shortDescription" : "Array modifications helper.", "object" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html", "members_object" : [{"label" : "copyOf", "tail" : "(array: Array[K], newLength: Int): Array[K]", "member" : "com.github.arturopala.bufferandslice.ArrayOps.copyOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#copyOf[K](array:Array[K],newLength:Int):Array[K]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.arturopala.bufferandslice.ArraySlice", "shortDescription" : "Lazy, immutable slice of an underlying array.", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.ArraySlice.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#hashCode():Int", "kind" : "final def"}, {"label" : "sameElements", "tail" : "(iterator1: Iterator[T], iterator2: Iterator[T]): Boolean", "member" : "com.github.arturopala.bufferandslice.ArraySlice.sameElements", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#sameElements(iterator1:Iterator[T],iterator2:Iterator[T]):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.github.arturopala.bufferandslice.ArraySlice.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#equals(obj:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.ArraySlice.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#toString():String", "kind" : "final def"}, {"label" : "asIterable", "tail" : "(): Iterable[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.asIterable", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#asIterable:Iterable[T]", "kind" : "final def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.toList", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#toList:List[T]", "kind" : "final def"}, {"label" : "toBuffer", "tail" : "(tag: ClassTag[T]): Buffer[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.toBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#toBuffer(implicittag:scala.reflect.ClassTag[T]):com.github.arturopala.bufferandslice.Buffer[T]", "kind" : "final def"}, {"label" : "toArray", "tail" : "(tag: ClassTag[T]): Array[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#toArray(implicittag:scala.reflect.ClassTag[T]):Array[T]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(pred: (T) => Boolean): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#reverseIterator(pred:T=>Boolean):Iterator[T]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#reverseIterator:Iterator[T]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#iterator:Iterator[T]", "kind" : "final def"}, {"label" : "dropRight", "tail" : "(n: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.dropRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#dropRight(n:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.drop", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#drop(n:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "final def"}, {"label" : "takeRight", "tail" : "(n: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.takeRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#takeRight(n:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.take", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#take(n:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "final def"}, {"label" : "slice", "tail" : "(from: Int, to: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.slice", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#slice(from:Int,to:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "final def"}, {"label" : "init", "tail" : "(): Slice[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.init", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#init:com.github.arturopala.bufferandslice.Slice[T]", "kind" : "final def"}, {"label" : "tail", "tail" : "(): Slice[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.tail", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#tail:com.github.arturopala.bufferandslice.Slice[T]", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#lastOption:Option[T]", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#headOption:Option[T]", "kind" : "final def"}, {"label" : "last", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.ArraySlice.last", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#last:T", "kind" : "final def"}, {"label" : "head", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.ArraySlice.head", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#head:T", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.ArraySlice.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "count", "tail" : "(pred: (T) => Boolean): Int", "member" : "com.github.arturopala.bufferandslice.ArraySlice.count", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#count(pred:T=>Boolean):Int", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (T) => K): Slice[K]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.map", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#map[K](f:T=>K):com.github.arturopala.bufferandslice.Slice[K]", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: T)(tag: ClassTag[T]): Slice[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.update", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#update(index:Int,value:T)(implicittag:scala.reflect.ClassTag[T]):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "final def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.ArraySlice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#apply(index:Int):T", "kind" : "final def"}, {"label" : "length", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.ArraySlice.length", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#length:Int", "kind" : "final val"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (T) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "mapF", "tail" : ": (A) => T", "member" : "com.github.arturopala.bufferandslice.ArraySlice.mapF", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#mapF:ArraySlice.this.A=>T", "kind" : "abstract val"}, {"label" : "array", "tail" : ": Array[A]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.array", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#array:Array[ArraySlice.this.A]", "kind" : "abstract val"}, {"member" : "com.github.arturopala.bufferandslice.ArraySlice.A", "error" : "unsupported entity"}], "class" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html", "kind" : "class"}, {"name" : "com.github.arturopala.bufferandslice.Buffer", "object" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html", "members_object" : [{"label" : "empty", "tail" : "(arg0: ClassTag[T]): ArrayBuffer[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.empty", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#empty[T](implicitevidence$4:scala.reflect.ClassTag[T]):com.github.arturopala.bufferandslice.ArrayBuffer[T]", "kind" : "def"}, {"label" : "ofSize", "tail" : "(size: Int)(arg0: ClassTag[T]): ArrayBuffer[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.ofSize", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#ofSize[T](size:Int)(implicitevidence$3:scala.reflect.ClassTag[T]):com.github.arturopala.bufferandslice.ArrayBuffer[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(array: Array[T])(arg0: ClassTag[T]): ArrayBuffer[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#apply[T](array:Array[T])(implicitevidence$2:scala.reflect.ClassTag[T]):com.github.arturopala.bufferandslice.ArrayBuffer[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: T*)(arg0: ClassTag[T]): ArrayBuffer[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#apply[T](elems:T*)(implicitevidence$1:scala.reflect.ClassTag[T]):com.github.arturopala.bufferandslice.ArrayBuffer[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/arturopala\/bufferandslice\/Buffer.html", "kind" : "trait", "members_trait" : [{"label" : "pop", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.pop", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#pop:T", "kind" : "final def"}, {"label" : "peek", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#peek:T", "kind" : "final def"}, {"label" : "push", "tail" : "(value: T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.push", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#push(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "store", "tail" : "(value: T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.store", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#store(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, insertLength: Int, iterator: Iterator[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#insertFromIterator(index:Int,insertLength:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertValues", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, source: (Int) => T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertValues", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#insertValues(index:Int,sourceIndex:Int,insertLength:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "appendIterable", "tail" : "(iterable: Iterable[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendIterable", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#appendIterable(iterable:Iterable[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(iterator: Iterator[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#appendFromIterator(iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSequence", "tail" : "(values: IndexedSeq[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSequence", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#appendSequence(values:IndexedSeq[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendArray", "tail" : "(values: Array[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendArray", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#appendArray(values:Array[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(value: T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.append", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#append(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.reset", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#reset:Int", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.top", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#top:Int", "kind" : "final def"}, {"label" : "set", "tail" : "(index: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.set", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#set(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.length", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#length:Int", "kind" : "final def"}, {"label" : "modifyRange", "tail" : "(fromIndex: Int, toIndex: Int, f: (T) => T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRange", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#modifyRange(fromIndex:Int,toIndex:Int,f:T=>T):Buffer.this.type", "kind" : "def"}, {"label" : "modify", "tail" : "(index: Int, f: (T) => T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modify", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#modify(index:Int,f:T=>T):Buffer.this.type", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (T) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "shiftLeft", "tail" : "(index: Int, distance: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.shiftLeft", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#shiftLeft(index:Int,distance:Int):Buffer.this.type", "kind" : "abstract def"}, {"label" : "shiftRight", "tail" : "(index: Int, distance: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.shiftRight", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#shiftRight(index:Int,distance:Int):Buffer.this.type", "kind" : "abstract def"}, {"label" : "insertArray", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, sourceArray: Array[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertArray", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#insertArray(index:Int,sourceIndex:Int,insertLength:Int,sourceArray:Array[T]):Buffer.this.type", "kind" : "abstract def"}, {"label" : "toSlice", "tail" : "(): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.toSlice", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#toSlice:com.github.arturopala.bufferandslice.Slice[T]", "kind" : "abstract def"}, {"label" : "toArray", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#toArray:Array[T]", "kind" : "abstract def"}, {"label" : "ensureIndex", "tail" : "(index: Int): Unit", "member" : "com.github.arturopala.bufferandslice.Buffer.ensureIndex", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#ensureIndex(index:Int):Unit", "kind" : "abstract def"}, {"label" : "update", "tail" : "(index: Int, value: T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.update", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#update(index:Int,value:T):Buffer.this.type", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.Buffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#apply(index:Int):T", "kind" : "abstract def"}], "shortDescription" : "Mutable indexed buffer abstraction."}, {"name" : "com.github.arturopala.bufferandslice.IntBuffer", "shortDescription" : "Growable, mutable array of integers.", "object" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html", "members_class" : [{"label" : "copyFrom", "tail" : "(index: Int, slice: IntSlice): Unit", "member" : "com.github.arturopala.bufferandslice.IntBuffer.copyFrom", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#copyFrom(index:Int,slice:com.github.arturopala.bufferandslice.IntSlice):Unit", "kind" : "def"}, {"label" : "toSlice", "tail" : "(): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntBuffer.toSlice", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#toSlice:com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Int]", "member" : "com.github.arturopala.bufferandslice.IntBuffer.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#toArray:Array[Int]", "kind" : "def"}, {"label" : "increment", "tail" : "(index: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.IntBuffer.increment", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#increment(index:Int):IntBuffer.this.type", "kind" : "def"}, {"label" : "ensureIndex", "tail" : "(index: Int): Unit", "member" : "com.github.arturopala.bufferandslice.IntBuffer.ensureIndex", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#ensureIndex(index:Int):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): Int", "member" : "com.github.arturopala.bufferandslice.IntBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#apply(index:Int):Int", "kind" : "def"}, {"label" : "array", "tail" : "(): Array[Int]", "member" : "com.github.arturopala.bufferandslice.IntBuffer.array", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#array:Array[Int]", "kind" : "def"}, {"member" : "com.github.arturopala.bufferandslice.IntBuffer#<init>", "error" : "unsupported entity"}, {"label" : "shiftLeft", "tail" : "(index: Int, distance: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftLeft", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#shiftLeft(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "shiftRight", "tail" : "(index: Int, distance: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftRight", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#shiftRight(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "insertArray", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, sourceArray: Array[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.insertArray", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#insertArray(index:Int,sourceIndex:Int,insertLength:Int,sourceArray:Array[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.toString", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#toString():String", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.update", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#update(index:Int,value:T):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "pop", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.pop", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#pop:T", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#peek:T", "kind" : "final def"}, {"label" : "push", "tail" : "(value: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.push", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#push(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "store", "tail" : "(value: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.store", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#store(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, insertLength: Int, iterator: Iterator[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#insertFromIterator(index:Int,insertLength:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertValues", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, source: (Int) => Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertValues", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#insertValues(index:Int,sourceIndex:Int,insertLength:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "appendIterable", "tail" : "(iterable: Iterable[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendIterable", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#appendIterable(iterable:Iterable[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(iterator: Iterator[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#appendFromIterator(iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSequence", "tail" : "(values: IndexedSeq[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSequence", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#appendSequence(values:IndexedSeq[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendArray", "tail" : "(values: Array[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendArray", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#appendArray(values:Array[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(value: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.append", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#append(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.reset", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#reset:Int", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.top", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#top:Int", "kind" : "final def"}, {"label" : "set", "tail" : "(index: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.set", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#set(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.length", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#length:Int", "kind" : "final def"}, {"label" : "modifyRange", "tail" : "(fromIndex: Int, toIndex: Int, f: (Int) => Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRange", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#modifyRange(fromIndex:Int,toIndex:Int,f:T=>T):Buffer.this.type", "kind" : "def"}, {"label" : "modify", "tail" : "(index: Int, f: (Int) => Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modify", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#modify(index:Int,f:T=>T):Buffer.this.type", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Int) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Int", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "empty", "tail" : "(): IntBuffer", "member" : "com.github.arturopala.bufferandslice.IntBuffer.empty", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#empty:com.github.arturopala.bufferandslice.IntBuffer", "kind" : "def"}, {"label" : "apply", "tail" : "(array: Array[Int]): IntBuffer", "member" : "com.github.arturopala.bufferandslice.IntBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#apply(array:Array[Int]):com.github.arturopala.bufferandslice.IntBuffer", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Int*): IntBuffer", "member" : "com.github.arturopala.bufferandslice.IntBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#apply(elems:Int*):com.github.arturopala.bufferandslice.IntBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html", "kind" : "class"}, {"name" : "com.github.arturopala.bufferandslice.IntSlice", "shortDescription" : "Lazy, specialized slice of the array of integers.", "object" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.IntSlice.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#hashCode():Int", "kind" : "def"}, {"label" : "sameElements", "tail" : "(iterator1: Iterator[Int], iterator2: Iterator[Int]): Boolean", "member" : "com.github.arturopala.bufferandslice.IntSlice.sameElements", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#sameElements(iterator1:Iterator[Int],iterator2:Iterator[Int]):Boolean", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.github.arturopala.bufferandslice.IntSlice.equals", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.IntSlice.toString", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#toString():String", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): IntBuffer", "member" : "com.github.arturopala.bufferandslice.IntSlice.toBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#toBuffer:com.github.arturopala.bufferandslice.IntBuffer", "kind" : "def"}, {"label" : "asIterable", "tail" : "(): Iterable[Int]", "member" : "com.github.arturopala.bufferandslice.IntSlice.asIterable", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#asIterable:Iterable[Int]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Int]", "member" : "com.github.arturopala.bufferandslice.IntSlice.toList", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#toList:List[Int]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(tag: ClassTag[Int]): Buffer[Int]", "member" : "com.github.arturopala.bufferandslice.IntSlice.toBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#toBuffer(implicittag:scala.reflect.ClassTag[Int]):com.github.arturopala.bufferandslice.Buffer[Int]", "kind" : "def"}, {"label" : "toArray", "tail" : "(tag: ClassTag[Int]): Array[Int]", "member" : "com.github.arturopala.bufferandslice.IntSlice.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#toArray(implicittag:scala.reflect.ClassTag[Int]):Array[Int]", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(pred: (Int) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.IntSlice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#reverseIterator(pred:Int=>Boolean):Iterator[Int]", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.IntSlice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#reverseIterator:Iterator[Int]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.IntSlice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#iterator:Iterator[Int]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.dropRight", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#dropRight(n:Int):com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.drop", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#drop(n:Int):com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.takeRight", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#takeRight(n:Int):com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.take", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#take(n:Int):com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, to: Int): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.slice", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#slice(from:Int,to:Int):com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "init", "tail" : "(): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.init", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#init:com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "tail", "tail" : "(): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.tail", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#tail:com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Int]", "member" : "com.github.arturopala.bufferandslice.IntSlice.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#lastOption:Option[Int]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Int]", "member" : "com.github.arturopala.bufferandslice.IntSlice.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#headOption:Option[Int]", "kind" : "def"}, {"label" : "last", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.IntSlice.last", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#last:Int", "kind" : "def"}, {"label" : "head", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.IntSlice.head", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#head:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.IntSlice.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "count", "tail" : "(pred: (Int) => Boolean): Int", "member" : "com.github.arturopala.bufferandslice.IntSlice.count", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#count(pred:Int=>Boolean):Int", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Int) => B): Slice[B]", "member" : "com.github.arturopala.bufferandslice.IntSlice.map", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#map[B](f:Int=>B):com.github.arturopala.bufferandslice.Slice[B]", "kind" : "def"}, {"label" : "update", "tail" : "(index: Int, value: Int): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.update", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#update(index:Int,value:Int):com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): Int", "member" : "com.github.arturopala.bufferandslice.IntSlice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#apply(index:Int):Int", "kind" : "def"}, {"label" : "length", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.IntSlice.length", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#length:Int", "kind" : "val"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (Int) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Int", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "empty", "tail" : "(): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.empty", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#empty:com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "of", "tail" : "(array: Array[Int], from: Int, to: Int): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.of", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#of(array:Array[Int],from:Int,to:Int):com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "of", "tail" : "(array: Array[Int]): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.of", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#of(array:Array[Int]):com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "apply", "tail" : "(is: Int*): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#apply(is:Int*):com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html", "kind" : "class"}, {"name" : "com.github.arturopala.bufferandslice.Slice", "object" : "com\/github\/arturopala\/bufferandslice\/Slice$.html", "members_object" : [{"label" : "empty", "tail" : "(arg0: ClassTag[T]): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.empty", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#empty[T](implicitevidence$2:scala.reflect.ClassTag[T]):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "def"}, {"label" : "of", "tail" : "(array: Array[T], from: Int, to: Int): ArraySlice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.of", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#of[T](array:Array[T],from:Int,to:Int):com.github.arturopala.bufferandslice.ArraySlice[T]", "kind" : "def"}, {"label" : "of", "tail" : "(array: Array[T]): ArraySlice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.of", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#of[T](array:Array[T]):com.github.arturopala.bufferandslice.ArraySlice[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(is: T*)(arg0: ClassTag[T]): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#apply[T](is:T*)(implicitevidence$1:scala.reflect.ClassTag[T]):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/arturopala\/bufferandslice\/Slice.html", "kind" : "trait", "members_trait" : [{"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (T) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toBuffer", "tail" : "(tag: ClassTag[T]): Buffer[T]", "member" : "com.github.arturopala.bufferandslice.Slice.toBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#toBuffer(implicittag:scala.reflect.ClassTag[T]):com.github.arturopala.bufferandslice.Buffer[T]", "kind" : "abstract def"}, {"label" : "toArray", "tail" : "(tag: ClassTag[T]): Array[T]", "member" : "com.github.arturopala.bufferandslice.Slice.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#toArray(implicittag:scala.reflect.ClassTag[T]):Array[T]", "kind" : "abstract def"}, {"label" : "asIterable", "tail" : "(): Iterable[T]", "member" : "com.github.arturopala.bufferandslice.Slice.asIterable", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#asIterable:Iterable[T]", "kind" : "abstract def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "com.github.arturopala.bufferandslice.Slice.toList", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#toList:List[T]", "kind" : "abstract def"}, {"label" : "reverseIterator", "tail" : "(pred: (T) => Boolean): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#reverseIterator(pred:T=>Boolean):Iterator[T]", "kind" : "abstract def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#reverseIterator:Iterator[T]", "kind" : "abstract def"}, {"label" : "iterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#iterator:Iterator[T]", "kind" : "abstract def"}, {"label" : "dropRight", "tail" : "(n: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.dropRight", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#dropRight(n:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "abstract def"}, {"label" : "drop", "tail" : "(n: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.drop", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#drop(n:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "abstract def"}, {"label" : "takeRight", "tail" : "(n: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.takeRight", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#takeRight(n:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "abstract def"}, {"label" : "take", "tail" : "(n: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.take", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#take(n:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "abstract def"}, {"label" : "slice", "tail" : "(from: Int, to: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.slice", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#slice(from:Int,to:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "abstract def"}, {"label" : "init", "tail" : "(): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.init", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#init:com.github.arturopala.bufferandslice.Slice[T]", "kind" : "abstract def"}, {"label" : "tail", "tail" : "(): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.tail", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#tail:com.github.arturopala.bufferandslice.Slice[T]", "kind" : "abstract def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#lastOption:Option[T]", "kind" : "abstract def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#headOption:Option[T]", "kind" : "abstract def"}, {"label" : "last", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Slice.last", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#last:T", "kind" : "abstract def"}, {"label" : "head", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Slice.head", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#head:T", "kind" : "abstract def"}, {"label" : "count", "tail" : "(pred: (T) => Boolean): Int", "member" : "com.github.arturopala.bufferandslice.Slice.count", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#count(pred:T=>Boolean):Int", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (T) => K): Slice[K]", "member" : "com.github.arturopala.bufferandslice.Slice.map", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#map[K](f:T=>K):com.github.arturopala.bufferandslice.Slice[K]", "kind" : "abstract def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#isEmpty:Boolean", "kind" : "abstract def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.length", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#length:Int", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.Slice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#apply(index:Int):T", "kind" : "abstract def"}], "shortDescription" : "Lazy, immutable slice of a sequence of values."}]};