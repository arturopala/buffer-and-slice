Index.PACKAGES = {"com" : [], "com.github" : [], "com.github.arturopala" : [], "com.github.arturopala.bufferandslice" : [{"name" : "com.github.arturopala.bufferandslice.ArrayBuffer", "shortDescription" : "Growable, mutable array of values.", "object" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html", "members_class" : [{"label" : "slice", "tail" : "(from: Int, to: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.slice", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#slice(from:Int,to:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "def"}, {"label" : "asSlice", "tail" : "(): Slice[T]", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.asSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#asSlice:com.github.arturopala.bufferandslice.Slice[T]", "kind" : "def"}, {"label" : "asArray", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.asArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#asArray:Array[T]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#toArray[T1>:T](implicitevidence$1:scala.reflect.ClassTag[T1]):Array[T1]", "kind" : "def"}, {"label" : "emptyCopy", "tail" : "(): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.emptyCopy", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#emptyCopy:ArrayBuffer.this.type", "kind" : "def"}, {"label" : "copy", "tail" : "(): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.copy", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#copy:ArrayBuffer.this.type", "kind" : "def"}, {"label" : "ensureIndex", "tail" : "(index: Int): Unit", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.ensureIndex", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#ensureIndex(index:Int):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#apply(index:Int):T", "kind" : "def"}, {"label" : "emptyArray", "tail" : "(length: Int): Array[T]", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.emptyArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#emptyArray(length:Int):Array[T]", "kind" : "def"}, {"label" : "copyFromSelf", "tail" : "(sourceIndex: Int, targetIndex: Int, copyLength: Int): Unit", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.copyFromSelf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#copyFromSelf(sourceIndex:Int,targetIndex:Int,copyLength:Int):Unit", "kind" : "def"}, {"label" : "copyFrom", "tail" : "(slice: Slice[T], targetIndex: Int): Unit", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.copyFrom", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#copyFrom(slice:com.github.arturopala.bufferandslice.Slice[T],targetIndex:Int):Unit", "kind" : "def"}, {"label" : "copyFrom", "tail" : "(sourceArray: Array[T], sourceIndex: Int, targetIndex: Int, copyLength: Int): Unit", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.copyFrom", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#copyFrom(sourceArray:Array[T],sourceIndex:Int,targetIndex:Int,copyLength:Int):Unit", "kind" : "def"}, {"label" : "uncheckedUpdate", "tail" : "(index: Int, value: T): Unit", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.uncheckedUpdate", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#uncheckedUpdate(index:Int,value:T):Unit", "kind" : "def"}, {"label" : "uncheckedApply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.uncheckedApply", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#uncheckedApply(index:Int):T", "kind" : "def"}, {"member" : "com.github.arturopala.bufferandslice.ArrayBuffer#<init>", "error" : "unsupported entity"}, {"label" : "optimize", "tail" : "(): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.optimize", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#optimize():ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "swapRange", "tail" : "(first: Int, second: Int, swapLength: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.swapRange", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#swapRange(first:Int,second:Int,swapLength:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "moveRangeLeft", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.moveRangeLeft", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#moveRangeLeft(fromIndex:Int,toIndex:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "moveRangeRight", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.moveRangeRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#moveRangeRight(fromIndex:Int,toIndex:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "shiftLeft", "tail" : "(index: Int, distance: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftLeft", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#shiftLeft(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "shiftRight", "tail" : "(index: Int, distance: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#shiftRight(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "replaceFromSlice", "tail" : "(index: Int, slice: Slice[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.replaceFromSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#replaceFromSlice(index:Int,slice:com.github.arturopala.bufferandslice.Slice[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "replaceFromArray", "tail" : "(index: Int, sourceIndex: Int, replaceLength: Int, sourceArray: Array[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.replaceFromArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#replaceFromArray(index:Int,sourceIndex:Int,replaceLength:Int,sourceArray:Array[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "insertSlice", "tail" : "(index: Int, slice: Slice[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.insertSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#insertSlice(index:Int,slice:com.github.arturopala.bufferandslice.Slice[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "insertArray", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, sourceArray: Array[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.insertArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#insertArray(index:Int,sourceIndex:Int,insertLength:Int,sourceArray:Array[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#toString():String", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.update", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#update(index:Int,value:T):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "exists", "tail" : "(pred: (T) => Boolean): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.exists", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#exists(pred:T=>Boolean):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(value: T): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.contains", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#contains(value:T):Boolean", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#reverseIterator:Iterator[T]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#iterator:Iterator[T]", "kind" : "final def"}, {"label" : "pop", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.pop", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#pop:T", "kind" : "final def"}, {"label" : "peekOption", "tail" : "(offset: Int): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.peekOption", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#peekOption(offset:Int):Option[T]", "kind" : "final def"}, {"label" : "peek", "tail" : "(offset: Int): T", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#peek(offset:Int):T", "kind" : "final def"}, {"label" : "peek", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#peek:T", "kind" : "final def"}, {"label" : "push", "tail" : "(value: T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.push", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#push(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "store", "tail" : "(value: T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.store", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#store(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "swap", "tail" : "(first: Int, second: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.swap", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#swap(first:Int,second:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "removeWhen", "tail" : "(pred: (T) => Boolean): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.removeWhen", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#removeWhen(pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "removeRange", "tail" : "(fromIndex: Int, toIndex: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.removeRange", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#removeRange(fromIndex:Int,toIndex:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "remove", "tail" : "(index: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.remove", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#remove(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceFromIteratorReverse", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#replaceFromIteratorReverse(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceFromIterator", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#replaceFromIterator(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceValues", "tail" : "(index: Int, sourceIndex: Int, numberOfValues: Int, source: (Int) => T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceValues", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#replaceValues(index:Int,sourceIndex:Int,numberOfValues:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIteratorReverse", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#insertFromIteratorReverse(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#insertFromIterator(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIteratorReverse", "tail" : "(index: Int, iterator: Iterator[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#insertFromIteratorReverse(index:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, iterator: Iterator[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#insertFromIterator(index:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertValues", "tail" : "(index: Int, sourceIndex: Int, numberOfValues: Int, source: (Int) => T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertValues", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#insertValues(index:Int,sourceIndex:Int,numberOfValues:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "insert", "tail" : "(index: Int, value: T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insert", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#insert(index:Int,value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "appendIterable", "tail" : "(iterable: Iterable[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendIterable", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#appendIterable(iterable:Iterable[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(numberOfValues: Int, iterator: Iterator[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#appendFromIterator(numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(iterator: Iterator[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#appendFromIterator(iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSequence", "tail" : "(values: IndexedSeq[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSequence", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#appendSequence(values:IndexedSeq[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSlice", "tail" : "(slice: Slice[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#appendSlice(slice:com.github.arturopala.bufferandslice.Slice[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendArray", "tail" : "(values: Array[T]): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#appendArray(values:Array[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(value: T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.append", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#append(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.reset", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#reset:Int", "kind" : "final def"}, {"label" : "forward", "tail" : "(distance: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.forward", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#forward(distance:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "rewind", "tail" : "(distance: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.rewind", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#rewind(distance:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "trim", "tail" : "(size: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.trim", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#trim(size:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "touch", "tail" : "(index: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.touch", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#touch(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(index: Int): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.set", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#set(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyRangeWhen", "tail" : "(fromIndex: Int, toIndex: Int, map: (T) => T, pred: (T) => Boolean): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRangeWhen", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#modifyRangeWhen(fromIndex:Int,toIndex:Int,map:T=>T,pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyRange", "tail" : "(fromIndex: Int, toIndex: Int, map: (T) => T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRange", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#modifyRange(fromIndex:Int,toIndex:Int,map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyAllWhen", "tail" : "(map: (T) => T, pred: (T) => Boolean): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyAllWhen", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#modifyAllWhen(map:T=>T,pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyAll", "tail" : "(map: (T) => T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#modifyAll(map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (T) => K): Iterable[K]", "member" : "com.github.arturopala.bufferandslice.Buffer.map", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#map[K](f:T=>K):Iterable[K]", "kind" : "final def"}, {"label" : "mapInPlace", "tail" : "(f: (T) => T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.mapInPlace", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#mapInPlace(f:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "modify", "tail" : "(index: Int, map: (T) => T): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modify", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#modify(index:Int,map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(index: Int): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.get", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#get(index:Int):Option[T]", "kind" : "final def"}, {"label" : "init", "tail" : "(): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.init", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#init:Buffer.this.type", "kind" : "final def"}, {"label" : "tail", "tail" : "(): ArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.tail", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#tail:Buffer.this.type", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#lastOption:Option[T]", "kind" : "final def"}, {"label" : "last", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.last", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#last:T", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#headOption:Option[T]", "kind" : "final def"}, {"label" : "head", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.head", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#head:T", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.top", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#top:Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.length", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#length:Int", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (T) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(initialLength: Int)(arg0: ClassTag[T]): ArrayBuffer[T]", "member" : "com.github.arturopala.bufferandslice.ArrayBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#apply[T](initialLength:Int)(implicitevidence$2:scala.reflect.ClassTag[T]):com.github.arturopala.bufferandslice.ArrayBuffer[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/arturopala\/bufferandslice\/ArrayBuffer.html", "kind" : "class"}, {"name" : "com.github.arturopala.bufferandslice.ArrayBufferLike", "trait" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html", "kind" : "trait", "members_trait" : [{"label" : "optimize", "tail" : "(): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.optimize", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#optimize():ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "swapRange", "tail" : "(first: Int, second: Int, swapLength: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.swapRange", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#swapRange(first:Int,second:Int,swapLength:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "moveRangeLeft", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.moveRangeLeft", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#moveRangeLeft(fromIndex:Int,toIndex:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "moveRangeRight", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.moveRangeRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#moveRangeRight(fromIndex:Int,toIndex:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "shiftLeft", "tail" : "(index: Int, distance: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftLeft", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#shiftLeft(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "shiftRight", "tail" : "(index: Int, distance: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#shiftRight(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "replaceFromSlice", "tail" : "(index: Int, slice: Slice[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.replaceFromSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#replaceFromSlice(index:Int,slice:com.github.arturopala.bufferandslice.Slice[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "replaceFromArray", "tail" : "(index: Int, sourceIndex: Int, replaceLength: Int, sourceArray: Array[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.replaceFromArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#replaceFromArray(index:Int,sourceIndex:Int,replaceLength:Int,sourceArray:Array[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "insertSlice", "tail" : "(index: Int, slice: Slice[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.insertSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#insertSlice(index:Int,slice:com.github.arturopala.bufferandslice.Slice[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "insertArray", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, sourceArray: Array[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.insertArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#insertArray(index:Int,sourceIndex:Int,insertLength:Int,sourceArray:Array[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#toString():String", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.update", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#update(index:Int,value:T):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "exists", "tail" : "(pred: (T) => Boolean): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.exists", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#exists(pred:T=>Boolean):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(value: T): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.contains", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#contains(value:T):Boolean", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#reverseIterator:Iterator[T]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#iterator:Iterator[T]", "kind" : "final def"}, {"label" : "pop", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.pop", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#pop:T", "kind" : "final def"}, {"label" : "peekOption", "tail" : "(offset: Int): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.peekOption", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#peekOption(offset:Int):Option[T]", "kind" : "final def"}, {"label" : "peek", "tail" : "(offset: Int): T", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#peek(offset:Int):T", "kind" : "final def"}, {"label" : "peek", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#peek:T", "kind" : "final def"}, {"label" : "push", "tail" : "(value: T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.push", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#push(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "store", "tail" : "(value: T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.store", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#store(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "swap", "tail" : "(first: Int, second: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.swap", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#swap(first:Int,second:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "removeWhen", "tail" : "(pred: (T) => Boolean): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.removeWhen", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#removeWhen(pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "removeRange", "tail" : "(fromIndex: Int, toIndex: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.removeRange", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#removeRange(fromIndex:Int,toIndex:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "remove", "tail" : "(index: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.remove", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#remove(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceFromIteratorReverse", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#replaceFromIteratorReverse(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceFromIterator", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#replaceFromIterator(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceValues", "tail" : "(index: Int, sourceIndex: Int, numberOfValues: Int, source: (Int) => T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceValues", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#replaceValues(index:Int,sourceIndex:Int,numberOfValues:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIteratorReverse", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#insertFromIteratorReverse(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#insertFromIterator(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIteratorReverse", "tail" : "(index: Int, iterator: Iterator[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#insertFromIteratorReverse(index:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, iterator: Iterator[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#insertFromIterator(index:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertValues", "tail" : "(index: Int, sourceIndex: Int, numberOfValues: Int, source: (Int) => T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertValues", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#insertValues(index:Int,sourceIndex:Int,numberOfValues:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "insert", "tail" : "(index: Int, value: T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insert", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#insert(index:Int,value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "appendIterable", "tail" : "(iterable: Iterable[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendIterable", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#appendIterable(iterable:Iterable[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(numberOfValues: Int, iterator: Iterator[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#appendFromIterator(numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(iterator: Iterator[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#appendFromIterator(iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSequence", "tail" : "(values: IndexedSeq[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSequence", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#appendSequence(values:IndexedSeq[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSlice", "tail" : "(slice: Slice[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#appendSlice(slice:com.github.arturopala.bufferandslice.Slice[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendArray", "tail" : "(values: Array[T]): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#appendArray(values:Array[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(value: T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.append", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#append(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.reset", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#reset:Int", "kind" : "final def"}, {"label" : "forward", "tail" : "(distance: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.forward", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#forward(distance:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "rewind", "tail" : "(distance: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.rewind", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#rewind(distance:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "trim", "tail" : "(size: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.trim", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#trim(size:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "touch", "tail" : "(index: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.touch", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#touch(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(index: Int): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.set", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#set(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyRangeWhen", "tail" : "(fromIndex: Int, toIndex: Int, map: (T) => T, pred: (T) => Boolean): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRangeWhen", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#modifyRangeWhen(fromIndex:Int,toIndex:Int,map:T=>T,pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyRange", "tail" : "(fromIndex: Int, toIndex: Int, map: (T) => T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRange", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#modifyRange(fromIndex:Int,toIndex:Int,map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyAllWhen", "tail" : "(map: (T) => T, pred: (T) => Boolean): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyAllWhen", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#modifyAllWhen(map:T=>T,pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyAll", "tail" : "(map: (T) => T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#modifyAll(map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (T) => K): Iterable[K]", "member" : "com.github.arturopala.bufferandslice.Buffer.map", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#map[K](f:T=>K):Iterable[K]", "kind" : "final def"}, {"label" : "mapInPlace", "tail" : "(f: (T) => T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.mapInPlace", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#mapInPlace(f:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "modify", "tail" : "(index: Int, map: (T) => T): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modify", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#modify(index:Int,map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(index: Int): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.get", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#get(index:Int):Option[T]", "kind" : "final def"}, {"label" : "init", "tail" : "(): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.init", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#init:Buffer.this.type", "kind" : "final def"}, {"label" : "tail", "tail" : "(): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.tail", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#tail:Buffer.this.type", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#lastOption:Option[T]", "kind" : "final def"}, {"label" : "last", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.last", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#last:T", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#headOption:Option[T]", "kind" : "final def"}, {"label" : "head", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.head", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#head:T", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.top", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#top:Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.length", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#length:Int", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (T) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "emptyArray", "tail" : "(length: Int): Array[T]", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.emptyArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#emptyArray(length:Int):Array[T]", "kind" : "abstract def"}, {"label" : "copyFromSelf", "tail" : "(sourceIndex: Int, targetIndex: Int, copyLength: Int): Unit", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.copyFromSelf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#copyFromSelf(sourceIndex:Int,targetIndex:Int,copyLength:Int):Unit", "kind" : "abstract def"}, {"label" : "copyFrom", "tail" : "(slice: Slice[T], targetIndex: Int): Unit", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.copyFrom", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#copyFrom(slice:com.github.arturopala.bufferandslice.Slice[T],targetIndex:Int):Unit", "kind" : "abstract def"}, {"label" : "copyFrom", "tail" : "(sourceArray: Array[T], sourceIndex: Int, targetIndex: Int, copyLength: Int): Unit", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.copyFrom", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#copyFrom(sourceArray:Array[T],sourceIndex:Int,targetIndex:Int,copyLength:Int):Unit", "kind" : "abstract def"}, {"label" : "slice", "tail" : "(from: Int, to: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.slice", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#slice(from:Int,to:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "abstract def"}, {"label" : "asSlice", "tail" : "(): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.asSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#asSlice:com.github.arturopala.bufferandslice.Slice[T]", "kind" : "abstract def"}, {"label" : "asArray", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.asArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#asArray:Array[T]", "kind" : "abstract def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.Buffer.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#toArray[T1>:T](implicitevidence$1:scala.reflect.ClassTag[T1]):Array[T1]", "kind" : "abstract def"}, {"label" : "emptyCopy", "tail" : "(): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.emptyCopy", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#emptyCopy:Buffer.this.type", "kind" : "abstract def"}, {"label" : "copy", "tail" : "(): ArrayBufferLike.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.copy", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#copy:Buffer.this.type", "kind" : "abstract def"}, {"label" : "ensureIndex", "tail" : "(index: Int): Unit", "member" : "com.github.arturopala.bufferandslice.Buffer.ensureIndex", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#ensureIndex(index:Int):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.Buffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#apply(index:Int):T", "kind" : "abstract def"}, {"label" : "uncheckedUpdate", "tail" : "(index: Int, value: T): Unit", "member" : "com.github.arturopala.bufferandslice.Buffer.uncheckedUpdate", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#uncheckedUpdate(index:Int,value:T):Unit", "kind" : "abstract def"}, {"label" : "uncheckedApply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.Buffer.uncheckedApply", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayBufferLike.html#uncheckedApply(index:Int):T", "kind" : "abstract def"}], "shortDescription" : "Common buffer functions impl for array-backend buffers."}, {"name" : "com.github.arturopala.bufferandslice.ArrayOps", "shortDescription" : "Array modifications helper.", "object" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html", "members_object" : [{"label" : "newArray", "tail" : "(exampleItem: T, length: Int): Array[T]", "member" : "com.github.arturopala.bufferandslice.ArrayOps.newArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#newArray[T](exampleItem:T,length:Int):Array[T]", "kind" : "final def"}, {"label" : "copyMapOf", "tail" : "(from: Int, to: Int, array: Array[K], map: (K) => T): Array[T]", "member" : "com.github.arturopala.bufferandslice.ArrayOps.copyMapOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#copyMapOf[K,T](from:Int,to:Int,array:Array[K],map:K=>T):Array[T]", "kind" : "final def"}, {"label" : "copyOf", "tail" : "(array: Array[K], newLength: Int): Array[K]", "member" : "com.github.arturopala.bufferandslice.ArrayOps.copyOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#copyOf[K](array:Array[K],newLength:Int):Array[K]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArrayOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.arturopala.bufferandslice.ArraySlice", "shortDescription" : "Lazy, immutable slice of an underlying array.", "object" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html", "members_class" : [{"label" : "asBuffer", "tail" : "(): Buffer[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.asBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#asBuffer:com.github.arturopala.bufferandslice.Buffer[T]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[T1]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.toBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#toBuffer[T1>:T]:com.github.arturopala.bufferandslice.Buffer[T1]", "kind" : "def"}, {"label" : "wrap", "tail" : "(fromIndex: Int, toIndex: Int, array: Array[T], detached: Boolean): ArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.ArraySlice.wrap", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#wrap(fromIndex:Int,toIndex:Int,array:Array[T],detached:Boolean):ArraySlice.this.type", "kind" : "def"}, {"label" : "detached", "tail" : ": Boolean", "member" : "com.github.arturopala.bufferandslice.ArraySlice.detached", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#detached:Boolean", "kind" : "val"}, {"label" : "array", "tail" : ": Array[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.array", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#array:Array[T]", "kind" : "val"}, {"label" : "toIndex", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.ArraySlice.toIndex", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#toIndex:Int", "kind" : "val"}, {"label" : "fromIndex", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.ArraySlice.fromIndex", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#fromIndex:Int", "kind" : "val"}, {"label" : "detach", "tail" : "(): ArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.detach", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#detach:ArraySliceLike.this.type", "kind" : "final def"}, {"label" : "copyToArray", "tail" : "(targetIndex: Int, targetArray: Array[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.copyToArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#copyToArray[T1>:T](targetIndex:Int,targetArray:Array[T1]):Array[T1]", "kind" : "final def"}, {"label" : "asArray", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.asArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#asArray:Array[T]", "kind" : "final def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#toArray[T1>:T](implicitevidence$1:scala.reflect.ClassTag[T1]):Array[T1]", "kind" : "final def"}, {"label" : "slice", "tail" : "(from: Int, to: Int): ArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.slice", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#slice(from:Int,to:Int):ArraySliceLike.this.type", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (T) => K): Slice[K]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.map", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#map[K](f:T=>K):com.github.arturopala.bufferandslice.Slice[K]", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: T1): Slice[T1]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.update", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#update[T1>:T](index:Int,value:T1):com.github.arturopala.bufferandslice.Slice[T1]", "kind" : "final def"}, {"label" : "read", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.read", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#read(index:Int):T", "kind" : "final def"}, {"label" : "length", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.length", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#length:Int", "kind" : "final val"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#equals(obj:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.Slice.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#toString():String", "kind" : "final def"}, {"label" : "asIterable", "tail" : "(): Iterable[T]", "member" : "com.github.arturopala.bufferandslice.Slice.asIterable", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#asIterable:Iterable[T]", "kind" : "final def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "com.github.arturopala.bufferandslice.Slice.toSeq", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#toSeq:Seq[T]", "kind" : "final def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "com.github.arturopala.bufferandslice.Slice.toList", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#toList:List[T]", "kind" : "final def"}, {"label" : "reverseIndexIterator", "tail" : "(pred: (T) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIndexIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#reverseIndexIterator(pred:T=>Boolean):Iterator[Int]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(pred: (T) => Boolean): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#reverseIterator(pred:T=>Boolean):Iterator[T]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#reverseIterator:Iterator[T]", "kind" : "final def"}, {"label" : "indexIterator", "tail" : "(pred: (T) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.indexIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#indexIterator(pred:T=>Boolean):Iterator[Int]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(pred: (T) => Boolean): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#iterator(pred:T=>Boolean):Iterator[T]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#iterator:Iterator[T]", "kind" : "final def"}, {"label" : "dropRight", "tail" : "(n: Int): ArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.dropRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#dropRight(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Int): ArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.drop", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#drop(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "takeRight", "tail" : "(n: Int): ArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.takeRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#takeRight(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Int): ArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.take", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#take(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "init", "tail" : "(): ArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.init", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#init:Slice.this.type", "kind" : "final def"}, {"label" : "tail", "tail" : "(): ArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.tail", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#tail:Slice.this.type", "kind" : "final def"}, {"label" : "exists", "tail" : "(pred: (T) => Boolean): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.exists", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#exists(pred:T=>Boolean):Boolean", "kind" : "final def"}, {"label" : "find", "tail" : "(pred: (T) => Boolean): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.find", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#find(pred:T=>Boolean):Option[T]", "kind" : "final def"}, {"label" : "get", "tail" : "(index: Int): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.get", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#get(index:Int):Option[T]", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#lastOption:Option[T]", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#headOption:Option[T]", "kind" : "final def"}, {"label" : "last", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Slice.last", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#last:T", "kind" : "final def"}, {"label" : "head", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Slice.head", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#head:T", "kind" : "final def"}, {"label" : "reduce", "tail" : "(f: (T, T) => T): T", "member" : "com.github.arturopala.bufferandslice.Slice.reduce", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#reduce(f:(T,T)=>T):T", "kind" : "final def"}, {"label" : "fold", "tail" : "(initial: T)(f: (T, T) => T): T", "member" : "com.github.arturopala.bufferandslice.Slice.fold", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#fold(initial:T)(f:(T,T)=>T):T", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(initial: R)(f: (T, R) => R): R", "member" : "com.github.arturopala.bufferandslice.Slice.foldRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#foldRight[R](initial:R)(f:(T,R)=>R):R", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(initial: R)(f: (R, T) => R): R", "member" : "com.github.arturopala.bufferandslice.Slice.foldLeft", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#foldLeft[R](initial:R)(f:(R,T)=>R):R", "kind" : "final def"}, {"label" : "count", "tail" : "(pred: (T) => Boolean): Int", "member" : "com.github.arturopala.bufferandslice.Slice.count", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#count(pred:T=>Boolean):Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.top", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#top:Int", "kind" : "final def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.Slice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#apply(index:Int):T", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (T) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "empty", "tail" : "(): ArraySlice[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.empty", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#empty[T]:com.github.arturopala.bufferandslice.ArraySlice[T]", "kind" : "def"}, {"label" : "of", "tail" : "(array: Array[T], from: Int, to: Int): ArraySlice[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.of", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#of[T](array:Array[T],from:Int,to:Int):com.github.arturopala.bufferandslice.ArraySlice[T]", "kind" : "def"}, {"label" : "of", "tail" : "(array: Array[T]): ArraySlice[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.of", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#of[T](array:Array[T]):com.github.arturopala.bufferandslice.ArraySlice[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(head: T, tail: T*): ArraySlice[T]", "member" : "com.github.arturopala.bufferandslice.ArraySlice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#apply[T](head:T,tail:T*):com.github.arturopala.bufferandslice.ArraySlice[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySlice$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/arturopala\/bufferandslice\/ArraySlice.html", "kind" : "class"}, {"name" : "com.github.arturopala.bufferandslice.ArraySliceLike", "trait" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html", "kind" : "trait", "members_trait" : [{"label" : "detach", "tail" : "(): ArraySliceLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.detach", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#detach:ArraySliceLike.this.type", "kind" : "final def"}, {"label" : "copyToArray", "tail" : "(targetIndex: Int, targetArray: Array[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.copyToArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#copyToArray[T1>:T](targetIndex:Int,targetArray:Array[T1]):Array[T1]", "kind" : "final def"}, {"label" : "asArray", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.asArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#asArray:Array[T]", "kind" : "final def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#toArray[T1>:T](implicitevidence$1:scala.reflect.ClassTag[T1]):Array[T1]", "kind" : "final def"}, {"label" : "slice", "tail" : "(from: Int, to: Int): ArraySliceLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.slice", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#slice(from:Int,to:Int):ArraySliceLike.this.type", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (T) => K): Slice[K]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.map", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#map[K](f:T=>K):com.github.arturopala.bufferandslice.Slice[K]", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: T1): Slice[T1]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.update", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#update[T1>:T](index:Int,value:T1):com.github.arturopala.bufferandslice.Slice[T1]", "kind" : "final def"}, {"label" : "read", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.read", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#read(index:Int):T", "kind" : "final def"}, {"label" : "length", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.length", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#length:Int", "kind" : "final val"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#equals(obj:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.Slice.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#toString():String", "kind" : "final def"}, {"label" : "asIterable", "tail" : "(): Iterable[T]", "member" : "com.github.arturopala.bufferandslice.Slice.asIterable", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#asIterable:Iterable[T]", "kind" : "final def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "com.github.arturopala.bufferandslice.Slice.toSeq", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#toSeq:Seq[T]", "kind" : "final def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "com.github.arturopala.bufferandslice.Slice.toList", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#toList:List[T]", "kind" : "final def"}, {"label" : "reverseIndexIterator", "tail" : "(pred: (T) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIndexIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#reverseIndexIterator(pred:T=>Boolean):Iterator[Int]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(pred: (T) => Boolean): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#reverseIterator(pred:T=>Boolean):Iterator[T]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#reverseIterator:Iterator[T]", "kind" : "final def"}, {"label" : "indexIterator", "tail" : "(pred: (T) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.indexIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#indexIterator(pred:T=>Boolean):Iterator[Int]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(pred: (T) => Boolean): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#iterator(pred:T=>Boolean):Iterator[T]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#iterator:Iterator[T]", "kind" : "final def"}, {"label" : "dropRight", "tail" : "(n: Int): ArraySliceLike.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.dropRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#dropRight(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Int): ArraySliceLike.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.drop", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#drop(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "takeRight", "tail" : "(n: Int): ArraySliceLike.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.takeRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#takeRight(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Int): ArraySliceLike.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.take", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#take(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "init", "tail" : "(): ArraySliceLike.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.init", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#init:Slice.this.type", "kind" : "final def"}, {"label" : "tail", "tail" : "(): ArraySliceLike.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.tail", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#tail:Slice.this.type", "kind" : "final def"}, {"label" : "exists", "tail" : "(pred: (T) => Boolean): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.exists", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#exists(pred:T=>Boolean):Boolean", "kind" : "final def"}, {"label" : "find", "tail" : "(pred: (T) => Boolean): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.find", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#find(pred:T=>Boolean):Option[T]", "kind" : "final def"}, {"label" : "get", "tail" : "(index: Int): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.get", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#get(index:Int):Option[T]", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#lastOption:Option[T]", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#headOption:Option[T]", "kind" : "final def"}, {"label" : "last", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Slice.last", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#last:T", "kind" : "final def"}, {"label" : "head", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Slice.head", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#head:T", "kind" : "final def"}, {"label" : "reduce", "tail" : "(f: (T, T) => T): T", "member" : "com.github.arturopala.bufferandslice.Slice.reduce", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#reduce(f:(T,T)=>T):T", "kind" : "final def"}, {"label" : "fold", "tail" : "(initial: T)(f: (T, T) => T): T", "member" : "com.github.arturopala.bufferandslice.Slice.fold", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#fold(initial:T)(f:(T,T)=>T):T", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(initial: R)(f: (T, R) => R): R", "member" : "com.github.arturopala.bufferandslice.Slice.foldRight", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#foldRight[R](initial:R)(f:(T,R)=>R):R", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(initial: R)(f: (R, T) => R): R", "member" : "com.github.arturopala.bufferandslice.Slice.foldLeft", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#foldLeft[R](initial:R)(f:(R,T)=>R):R", "kind" : "final def"}, {"label" : "count", "tail" : "(pred: (T) => Boolean): Int", "member" : "com.github.arturopala.bufferandslice.Slice.count", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#count(pred:T=>Boolean):Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.top", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#top:Int", "kind" : "final def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.Slice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#apply(index:Int):T", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (T) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "wrap", "tail" : "(fromIndex: Int, toIndex: Int, array: Array[T], detached: Boolean): ArraySliceLike.this.type", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.wrap", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#wrap(fromIndex:Int,toIndex:Int,array:Array[T],detached:Boolean):ArraySliceLike.this.type", "kind" : "abstract def"}, {"label" : "detached", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.detached", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#detached:Boolean", "kind" : "abstract def"}, {"label" : "array", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.array", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#array:Array[T]", "kind" : "abstract def"}, {"label" : "toIndex", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.toIndex", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#toIndex:Int", "kind" : "abstract def"}, {"label" : "fromIndex", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.fromIndex", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#fromIndex:Int", "kind" : "abstract def"}, {"label" : "asBuffer", "tail" : "(): Buffer[T]", "member" : "com.github.arturopala.bufferandslice.Slice.asBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#asBuffer:com.github.arturopala.bufferandslice.Buffer[T]", "kind" : "abstract def"}, {"label" : "toBuffer", "tail" : "(): Buffer[T1]", "member" : "com.github.arturopala.bufferandslice.Slice.toBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/ArraySliceLike.html#toBuffer[T1>:T]:com.github.arturopala.bufferandslice.Buffer[T1]", "kind" : "abstract def"}], "shortDescription" : "Common functions of an array-backed Slice."}, {"name" : "com.github.arturopala.bufferandslice.Buffer", "object" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html", "members_object" : [{"label" : "empty", "tail" : "(): Buffer[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.empty", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#empty[T]:com.github.arturopala.bufferandslice.Buffer[T]", "kind" : "def"}, {"label" : "ofSize", "tail" : "(size: Int): Buffer[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.ofSize", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#ofSize[T](size:Int):com.github.arturopala.bufferandslice.Buffer[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(array: Array[T], length: Int): Buffer[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#apply[T](array:Array[T],length:Int):com.github.arturopala.bufferandslice.Buffer[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(array: Array[T]): Buffer[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#apply[T](array:Array[T]):com.github.arturopala.bufferandslice.Buffer[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(head: T, tail: T*): Buffer[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#apply[T](head:T,tail:T*):com.github.arturopala.bufferandslice.Buffer[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/arturopala\/bufferandslice\/Buffer.html", "kind" : "trait", "members_trait" : [{"label" : "exists", "tail" : "(pred: (T) => Boolean): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.exists", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#exists(pred:T=>Boolean):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(value: T): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.contains", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#contains(value:T):Boolean", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#reverseIterator:Iterator[T]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#iterator:Iterator[T]", "kind" : "final def"}, {"label" : "pop", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.pop", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#pop:T", "kind" : "final def"}, {"label" : "peekOption", "tail" : "(offset: Int): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.peekOption", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#peekOption(offset:Int):Option[T]", "kind" : "final def"}, {"label" : "peek", "tail" : "(offset: Int): T", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#peek(offset:Int):T", "kind" : "final def"}, {"label" : "peek", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#peek:T", "kind" : "final def"}, {"label" : "push", "tail" : "(value: T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.push", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#push(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "store", "tail" : "(value: T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.store", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#store(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "swap", "tail" : "(first: Int, second: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.swap", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#swap(first:Int,second:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "removeWhen", "tail" : "(pred: (T) => Boolean): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.removeWhen", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#removeWhen(pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "removeRange", "tail" : "(fromIndex: Int, toIndex: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.removeRange", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#removeRange(fromIndex:Int,toIndex:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "remove", "tail" : "(index: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.remove", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#remove(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceFromIteratorReverse", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#replaceFromIteratorReverse(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceFromIterator", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#replaceFromIterator(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceValues", "tail" : "(index: Int, sourceIndex: Int, numberOfValues: Int, source: (Int) => T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceValues", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#replaceValues(index:Int,sourceIndex:Int,numberOfValues:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIteratorReverse", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#insertFromIteratorReverse(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#insertFromIterator(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIteratorReverse", "tail" : "(index: Int, iterator: Iterator[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#insertFromIteratorReverse(index:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, iterator: Iterator[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#insertFromIterator(index:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertValues", "tail" : "(index: Int, sourceIndex: Int, numberOfValues: Int, source: (Int) => T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertValues", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#insertValues(index:Int,sourceIndex:Int,numberOfValues:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "insert", "tail" : "(index: Int, value: T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insert", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#insert(index:Int,value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "appendIterable", "tail" : "(iterable: Iterable[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendIterable", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#appendIterable(iterable:Iterable[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(numberOfValues: Int, iterator: Iterator[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#appendFromIterator(numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(iterator: Iterator[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#appendFromIterator(iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSequence", "tail" : "(values: IndexedSeq[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSequence", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#appendSequence(values:IndexedSeq[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSlice", "tail" : "(slice: Slice[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSlice", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#appendSlice(slice:com.github.arturopala.bufferandslice.Slice[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendArray", "tail" : "(values: Array[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendArray", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#appendArray(values:Array[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(value: T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.append", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#append(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.reset", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#reset:Int", "kind" : "final def"}, {"label" : "forward", "tail" : "(distance: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.forward", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#forward(distance:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "rewind", "tail" : "(distance: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.rewind", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#rewind(distance:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "trim", "tail" : "(size: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.trim", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#trim(size:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "touch", "tail" : "(index: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.touch", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#touch(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(index: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.set", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#set(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyRangeWhen", "tail" : "(fromIndex: Int, toIndex: Int, map: (T) => T, pred: (T) => Boolean): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRangeWhen", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#modifyRangeWhen(fromIndex:Int,toIndex:Int,map:T=>T,pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyRange", "tail" : "(fromIndex: Int, toIndex: Int, map: (T) => T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRange", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#modifyRange(fromIndex:Int,toIndex:Int,map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyAllWhen", "tail" : "(map: (T) => T, pred: (T) => Boolean): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyAllWhen", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#modifyAllWhen(map:T=>T,pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyAll", "tail" : "(map: (T) => T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#modifyAll(map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (T) => K): Iterable[K]", "member" : "com.github.arturopala.bufferandslice.Buffer.map", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#map[K](f:T=>K):Iterable[K]", "kind" : "final def"}, {"label" : "mapInPlace", "tail" : "(f: (T) => T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.mapInPlace", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#mapInPlace(f:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "modify", "tail" : "(index: Int, map: (T) => T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modify", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#modify(index:Int,map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(index: Int): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.get", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#get(index:Int):Option[T]", "kind" : "final def"}, {"label" : "init", "tail" : "(): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.init", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#init:Buffer.this.type", "kind" : "final def"}, {"label" : "tail", "tail" : "(): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.tail", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#tail:Buffer.this.type", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#lastOption:Option[T]", "kind" : "final def"}, {"label" : "last", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.last", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#last:T", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#headOption:Option[T]", "kind" : "final def"}, {"label" : "head", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.head", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#head:T", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.top", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#top:Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.length", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#length:Int", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (T) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "swapRange", "tail" : "(first: Int, second: Int, swapLength: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.swapRange", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#swapRange(first:Int,second:Int,swapLength:Int):Buffer.this.type", "kind" : "abstract def"}, {"label" : "moveRangeLeft", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.moveRangeLeft", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#moveRangeLeft(fromIndex:Int,toIndex:Int,distance:Int):Buffer.this.type", "kind" : "abstract def"}, {"label" : "moveRangeRight", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.moveRangeRight", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#moveRangeRight(fromIndex:Int,toIndex:Int,distance:Int):Buffer.this.type", "kind" : "abstract def"}, {"label" : "shiftLeft", "tail" : "(index: Int, distance: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.shiftLeft", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#shiftLeft(index:Int,distance:Int):Buffer.this.type", "kind" : "abstract def"}, {"label" : "shiftRight", "tail" : "(index: Int, distance: Int): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.shiftRight", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#shiftRight(index:Int,distance:Int):Buffer.this.type", "kind" : "abstract def"}, {"label" : "replaceFromSlice", "tail" : "(index: Int, slice: Slice[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromSlice", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#replaceFromSlice(index:Int,slice:com.github.arturopala.bufferandslice.Slice[T]):Buffer.this.type", "kind" : "abstract def"}, {"label" : "replaceFromArray", "tail" : "(index: Int, sourceIndex: Int, replaceLength: Int, sourceArray: Array[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromArray", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#replaceFromArray(index:Int,sourceIndex:Int,replaceLength:Int,sourceArray:Array[T]):Buffer.this.type", "kind" : "abstract def"}, {"label" : "insertSlice", "tail" : "(index: Int, slice: Slice[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertSlice", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#insertSlice(index:Int,slice:com.github.arturopala.bufferandslice.Slice[T]):Buffer.this.type", "kind" : "abstract def"}, {"label" : "insertArray", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, sourceArray: Array[T]): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertArray", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#insertArray(index:Int,sourceIndex:Int,insertLength:Int,sourceArray:Array[T]):Buffer.this.type", "kind" : "abstract def"}, {"label" : "optimize", "tail" : "(): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.optimize", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#optimize():Buffer.this.type", "kind" : "abstract def"}, {"label" : "slice", "tail" : "(from: Int, to: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.slice", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#slice(from:Int,to:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "abstract def"}, {"label" : "asSlice", "tail" : "(): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.asSlice", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#asSlice:com.github.arturopala.bufferandslice.Slice[T]", "kind" : "abstract def"}, {"label" : "asArray", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.asArray", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#asArray:Array[T]", "kind" : "abstract def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.Buffer.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#toArray[T1>:T](implicitevidence$1:scala.reflect.ClassTag[T1]):Array[T1]", "kind" : "abstract def"}, {"label" : "emptyCopy", "tail" : "(): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.emptyCopy", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#emptyCopy:Buffer.this.type", "kind" : "abstract def"}, {"label" : "copy", "tail" : "(): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.copy", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#copy:Buffer.this.type", "kind" : "abstract def"}, {"label" : "ensureIndex", "tail" : "(index: Int): Unit", "member" : "com.github.arturopala.bufferandslice.Buffer.ensureIndex", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#ensureIndex(index:Int):Unit", "kind" : "abstract def"}, {"label" : "update", "tail" : "(index: Int, value: T): Buffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.update", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#update(index:Int,value:T):Buffer.this.type", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.Buffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#apply(index:Int):T", "kind" : "abstract def"}, {"label" : "uncheckedUpdate", "tail" : "(index: Int, value: T): Unit", "member" : "com.github.arturopala.bufferandslice.Buffer.uncheckedUpdate", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#uncheckedUpdate(index:Int,value:T):Unit", "kind" : "abstract def"}, {"label" : "uncheckedApply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.Buffer.uncheckedApply", "link" : "com\/github\/arturopala\/bufferandslice\/Buffer.html#uncheckedApply(index:Int):T", "kind" : "abstract def"}], "shortDescription" : "Mutable indexed buffer abstraction."}, {"name" : "com.github.arturopala.bufferandslice.ByteBuffer", "shortDescription" : "Growable, mutable array of bytes.", "object" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html", "members_class" : [{"label" : "slice", "tail" : "(from: Int, to: Int): ByteSlice", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.slice", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#slice(from:Int,to:Int):com.github.arturopala.bufferandslice.ByteSlice", "kind" : "def"}, {"label" : "asSlice", "tail" : "(): ByteSlice", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.asSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#asSlice:com.github.arturopala.bufferandslice.ByteSlice", "kind" : "def"}, {"label" : "asArray", "tail" : "(): Array[Byte]", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.asArray", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#asArray:Array[Byte]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#toArray[T1>:Byte](implicitevidence$1:scala.reflect.ClassTag[T1]):Array[T1]", "kind" : "def"}, {"label" : "emptyCopy", "tail" : "(): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.emptyCopy", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#emptyCopy:ByteBuffer.this.type", "kind" : "def"}, {"label" : "copy", "tail" : "(): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.copy", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#copy:ByteBuffer.this.type", "kind" : "def"}, {"label" : "ensureIndex", "tail" : "(index: Int): Unit", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.ensureIndex", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#ensureIndex(index:Int):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): Byte", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#apply(index:Int):Byte", "kind" : "def"}, {"label" : "emptyArray", "tail" : "(length: Int): Array[Byte]", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.emptyArray", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#emptyArray(length:Int):Array[Byte]", "kind" : "def"}, {"label" : "copyFromSelf", "tail" : "(sourceIndex: Int, targetIndex: Int, copyLength: Int): Unit", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.copyFromSelf", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#copyFromSelf(sourceIndex:Int,targetIndex:Int,copyLength:Int):Unit", "kind" : "def"}, {"label" : "copyFrom", "tail" : "(slice: Slice[Byte], targetIndex: Int): Unit", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.copyFrom", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#copyFrom(slice:com.github.arturopala.bufferandslice.Slice[Byte],targetIndex:Int):Unit", "kind" : "def"}, {"label" : "copyFrom", "tail" : "(sourceArray: Array[Byte], sourceIndex: Int, targetIndex: Int, copyLength: Int): Unit", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.copyFrom", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#copyFrom(sourceArray:Array[Byte],sourceIndex:Int,targetIndex:Int,copyLength:Int):Unit", "kind" : "def"}, {"label" : "uncheckedUpdate", "tail" : "(index: Int, value: Byte): Unit", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.uncheckedUpdate", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#uncheckedUpdate(index:Int,value:Byte):Unit", "kind" : "def"}, {"label" : "uncheckedApply", "tail" : "(index: Int): Byte", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.uncheckedApply", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#uncheckedApply(index:Int):Byte", "kind" : "def"}, {"member" : "com.github.arturopala.bufferandslice.ByteBuffer#<init>", "error" : "unsupported entity"}, {"label" : "optimize", "tail" : "(): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.optimize", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#optimize():ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "swapRange", "tail" : "(first: Int, second: Int, swapLength: Int): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.swapRange", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#swapRange(first:Int,second:Int,swapLength:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "moveRangeLeft", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.moveRangeLeft", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#moveRangeLeft(fromIndex:Int,toIndex:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "moveRangeRight", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.moveRangeRight", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#moveRangeRight(fromIndex:Int,toIndex:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "shiftLeft", "tail" : "(index: Int, distance: Int): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftLeft", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#shiftLeft(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "shiftRight", "tail" : "(index: Int, distance: Int): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftRight", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#shiftRight(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "replaceFromSlice", "tail" : "(index: Int, slice: Slice[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.replaceFromSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#replaceFromSlice(index:Int,slice:com.github.arturopala.bufferandslice.Slice[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "replaceFromArray", "tail" : "(index: Int, sourceIndex: Int, replaceLength: Int, sourceArray: Array[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.replaceFromArray", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#replaceFromArray(index:Int,sourceIndex:Int,replaceLength:Int,sourceArray:Array[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "insertSlice", "tail" : "(index: Int, slice: Slice[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.insertSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#insertSlice(index:Int,slice:com.github.arturopala.bufferandslice.Slice[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "insertArray", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, sourceArray: Array[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.insertArray", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#insertArray(index:Int,sourceIndex:Int,insertLength:Int,sourceArray:Array[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#toString():String", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: Byte): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.update", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#update(index:Int,value:T):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "exists", "tail" : "(pred: (Byte) => Boolean): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.exists", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#exists(pred:T=>Boolean):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(value: Byte): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.contains", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#contains(value:T):Boolean", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Byte]", "member" : "com.github.arturopala.bufferandslice.Buffer.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#reverseIterator:Iterator[T]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[Byte]", "member" : "com.github.arturopala.bufferandslice.Buffer.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#iterator:Iterator[T]", "kind" : "final def"}, {"label" : "pop", "tail" : "(): Byte", "member" : "com.github.arturopala.bufferandslice.Buffer.pop", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#pop:T", "kind" : "final def"}, {"label" : "peekOption", "tail" : "(offset: Int): Option[Byte]", "member" : "com.github.arturopala.bufferandslice.Buffer.peekOption", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#peekOption(offset:Int):Option[T]", "kind" : "final def"}, {"label" : "peek", "tail" : "(offset: Int): Byte", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#peek(offset:Int):T", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Byte", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#peek:T", "kind" : "final def"}, {"label" : "push", "tail" : "(value: Byte): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.push", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#push(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "store", "tail" : "(value: Byte): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.store", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#store(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "swap", "tail" : "(first: Int, second: Int): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.swap", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#swap(first:Int,second:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "removeWhen", "tail" : "(pred: (Byte) => Boolean): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.removeWhen", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#removeWhen(pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "removeRange", "tail" : "(fromIndex: Int, toIndex: Int): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.removeRange", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#removeRange(fromIndex:Int,toIndex:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "remove", "tail" : "(index: Int): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.remove", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#remove(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceFromIteratorReverse", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#replaceFromIteratorReverse(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceFromIterator", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#replaceFromIterator(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceValues", "tail" : "(index: Int, sourceIndex: Int, numberOfValues: Int, source: (Int) => Byte): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceValues", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#replaceValues(index:Int,sourceIndex:Int,numberOfValues:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIteratorReverse", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#insertFromIteratorReverse(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#insertFromIterator(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIteratorReverse", "tail" : "(index: Int, iterator: Iterator[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#insertFromIteratorReverse(index:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, iterator: Iterator[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#insertFromIterator(index:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertValues", "tail" : "(index: Int, sourceIndex: Int, numberOfValues: Int, source: (Int) => Byte): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertValues", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#insertValues(index:Int,sourceIndex:Int,numberOfValues:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "insert", "tail" : "(index: Int, value: Byte): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insert", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#insert(index:Int,value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "appendIterable", "tail" : "(iterable: Iterable[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendIterable", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#appendIterable(iterable:Iterable[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(numberOfValues: Int, iterator: Iterator[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#appendFromIterator(numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(iterator: Iterator[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#appendFromIterator(iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSequence", "tail" : "(values: IndexedSeq[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSequence", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#appendSequence(values:IndexedSeq[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSlice", "tail" : "(slice: Slice[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSlice", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#appendSlice(slice:com.github.arturopala.bufferandslice.Slice[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendArray", "tail" : "(values: Array[Byte]): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendArray", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#appendArray(values:Array[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(value: Byte): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.append", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#append(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.reset", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#reset:Int", "kind" : "final def"}, {"label" : "forward", "tail" : "(distance: Int): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.forward", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#forward(distance:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "rewind", "tail" : "(distance: Int): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.rewind", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#rewind(distance:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "trim", "tail" : "(size: Int): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.trim", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#trim(size:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "touch", "tail" : "(index: Int): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.touch", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#touch(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(index: Int): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.set", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#set(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyRangeWhen", "tail" : "(fromIndex: Int, toIndex: Int, map: (Byte) => Byte, pred: (Byte) => Boolean): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRangeWhen", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#modifyRangeWhen(fromIndex:Int,toIndex:Int,map:T=>T,pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyRange", "tail" : "(fromIndex: Int, toIndex: Int, map: (Byte) => Byte): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRange", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#modifyRange(fromIndex:Int,toIndex:Int,map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyAllWhen", "tail" : "(map: (Byte) => Byte, pred: (Byte) => Boolean): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyAllWhen", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#modifyAllWhen(map:T=>T,pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyAll", "tail" : "(map: (Byte) => Byte): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#modifyAll(map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Byte) => K): Iterable[K]", "member" : "com.github.arturopala.bufferandslice.Buffer.map", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#map[K](f:T=>K):Iterable[K]", "kind" : "final def"}, {"label" : "mapInPlace", "tail" : "(f: (Byte) => Byte): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.mapInPlace", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#mapInPlace(f:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "modify", "tail" : "(index: Int, map: (Byte) => Byte): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modify", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#modify(index:Int,map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(index: Int): Option[Byte]", "member" : "com.github.arturopala.bufferandslice.Buffer.get", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#get(index:Int):Option[T]", "kind" : "final def"}, {"label" : "init", "tail" : "(): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.init", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#init:Buffer.this.type", "kind" : "final def"}, {"label" : "tail", "tail" : "(): ByteBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.tail", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#tail:Buffer.this.type", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Byte]", "member" : "com.github.arturopala.bufferandslice.Buffer.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#lastOption:Option[T]", "kind" : "final def"}, {"label" : "last", "tail" : "(): Byte", "member" : "com.github.arturopala.bufferandslice.Buffer.last", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#last:T", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[Byte]", "member" : "com.github.arturopala.bufferandslice.Buffer.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#headOption:Option[T]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Byte", "member" : "com.github.arturopala.bufferandslice.Buffer.head", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#head:T", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.top", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#top:Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.length", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#length:Int", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (Byte) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Byte", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "empty", "tail" : "(): ByteBuffer", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.empty", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#empty:com.github.arturopala.bufferandslice.ByteBuffer", "kind" : "def"}, {"label" : "apply", "tail" : "(array: Array[Byte]): ByteBuffer", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#apply(array:Array[Byte]):com.github.arturopala.bufferandslice.ByteBuffer", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Int*): ByteBuffer", "member" : "com.github.arturopala.bufferandslice.ByteBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#apply(elems:Int*):com.github.arturopala.bufferandslice.ByteBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/arturopala\/bufferandslice\/ByteBuffer.html", "kind" : "class"}, {"name" : "com.github.arturopala.bufferandslice.ByteSlice", "shortDescription" : "Lazy, specialized slice of the array of bytes.", "object" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html", "members_class" : [{"label" : "asBuffer", "tail" : "(): ByteBuffer", "member" : "com.github.arturopala.bufferandslice.ByteSlice.asBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#asBuffer:com.github.arturopala.bufferandslice.ByteBuffer", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[T1]", "member" : "com.github.arturopala.bufferandslice.ByteSlice.toBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#toBuffer[T1>:Byte]:com.github.arturopala.bufferandslice.Buffer[T1]", "kind" : "def"}, {"label" : "wrap", "tail" : "(fromIndex: Int, toIndex: Int, array: Array[Byte], detached: Boolean): ByteSlice.this.type", "member" : "com.github.arturopala.bufferandslice.ByteSlice.wrap", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#wrap(fromIndex:Int,toIndex:Int,array:Array[Byte],detached:Boolean):ByteSlice.this.type", "kind" : "def"}, {"label" : "detached", "tail" : ": Boolean", "member" : "com.github.arturopala.bufferandslice.ByteSlice.detached", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#detached:Boolean", "kind" : "val"}, {"label" : "array", "tail" : ": Array[Byte]", "member" : "com.github.arturopala.bufferandslice.ByteSlice.array", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#array:Array[Byte]", "kind" : "val"}, {"label" : "toIndex", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.ByteSlice.toIndex", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#toIndex:Int", "kind" : "val"}, {"label" : "fromIndex", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.ByteSlice.fromIndex", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#fromIndex:Int", "kind" : "val"}, {"label" : "detach", "tail" : "(): ByteSlice.this.type", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.detach", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#detach:ArraySliceLike.this.type", "kind" : "final def"}, {"label" : "copyToArray", "tail" : "(targetIndex: Int, targetArray: Array[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.copyToArray", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#copyToArray[T1>:T](targetIndex:Int,targetArray:Array[T1]):Array[T1]", "kind" : "final def"}, {"label" : "asArray", "tail" : "(): Array[Byte]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.asArray", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#asArray:Array[T]", "kind" : "final def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#toArray[T1>:T](implicitevidence$1:scala.reflect.ClassTag[T1]):Array[T1]", "kind" : "final def"}, {"label" : "slice", "tail" : "(from: Int, to: Int): ByteSlice.this.type", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.slice", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#slice(from:Int,to:Int):ArraySliceLike.this.type", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Byte) => K): Slice[K]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.map", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#map[K](f:T=>K):com.github.arturopala.bufferandslice.Slice[K]", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: T1): Slice[T1]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.update", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#update[T1>:T](index:Int,value:T1):com.github.arturopala.bufferandslice.Slice[T1]", "kind" : "final def"}, {"label" : "read", "tail" : "(index: Int): Byte", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.read", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#read(index:Int):T", "kind" : "final def"}, {"label" : "length", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.length", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#length:Int", "kind" : "final val"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#equals(obj:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.Slice.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#toString():String", "kind" : "final def"}, {"label" : "asIterable", "tail" : "(): Iterable[Byte]", "member" : "com.github.arturopala.bufferandslice.Slice.asIterable", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#asIterable:Iterable[T]", "kind" : "final def"}, {"label" : "toSeq", "tail" : "(): Seq[Byte]", "member" : "com.github.arturopala.bufferandslice.Slice.toSeq", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#toSeq:Seq[T]", "kind" : "final def"}, {"label" : "toList", "tail" : "(): List[Byte]", "member" : "com.github.arturopala.bufferandslice.Slice.toList", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#toList:List[T]", "kind" : "final def"}, {"label" : "reverseIndexIterator", "tail" : "(pred: (Byte) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIndexIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#reverseIndexIterator(pred:T=>Boolean):Iterator[Int]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(pred: (Byte) => Boolean): Iterator[Byte]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#reverseIterator(pred:T=>Boolean):Iterator[T]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Byte]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#reverseIterator:Iterator[T]", "kind" : "final def"}, {"label" : "indexIterator", "tail" : "(pred: (Byte) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.indexIterator", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#indexIterator(pred:T=>Boolean):Iterator[Int]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(pred: (Byte) => Boolean): Iterator[Byte]", "member" : "com.github.arturopala.bufferandslice.Slice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#iterator(pred:T=>Boolean):Iterator[T]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[Byte]", "member" : "com.github.arturopala.bufferandslice.Slice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#iterator:Iterator[T]", "kind" : "final def"}, {"label" : "dropRight", "tail" : "(n: Int): ByteSlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.dropRight", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#dropRight(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Int): ByteSlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.drop", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#drop(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "takeRight", "tail" : "(n: Int): ByteSlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.takeRight", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#takeRight(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Int): ByteSlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.take", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#take(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "init", "tail" : "(): ByteSlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.init", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#init:Slice.this.type", "kind" : "final def"}, {"label" : "tail", "tail" : "(): ByteSlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.tail", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#tail:Slice.this.type", "kind" : "final def"}, {"label" : "exists", "tail" : "(pred: (Byte) => Boolean): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.exists", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#exists(pred:T=>Boolean):Boolean", "kind" : "final def"}, {"label" : "find", "tail" : "(pred: (Byte) => Boolean): Option[Byte]", "member" : "com.github.arturopala.bufferandslice.Slice.find", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#find(pred:T=>Boolean):Option[T]", "kind" : "final def"}, {"label" : "get", "tail" : "(index: Int): Option[Byte]", "member" : "com.github.arturopala.bufferandslice.Slice.get", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#get(index:Int):Option[T]", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Byte]", "member" : "com.github.arturopala.bufferandslice.Slice.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#lastOption:Option[T]", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[Byte]", "member" : "com.github.arturopala.bufferandslice.Slice.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#headOption:Option[T]", "kind" : "final def"}, {"label" : "last", "tail" : "(): Byte", "member" : "com.github.arturopala.bufferandslice.Slice.last", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#last:T", "kind" : "final def"}, {"label" : "head", "tail" : "(): Byte", "member" : "com.github.arturopala.bufferandslice.Slice.head", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#head:T", "kind" : "final def"}, {"label" : "reduce", "tail" : "(f: (Byte, Byte) => Byte): Byte", "member" : "com.github.arturopala.bufferandslice.Slice.reduce", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#reduce(f:(T,T)=>T):T", "kind" : "final def"}, {"label" : "fold", "tail" : "(initial: Byte)(f: (Byte, Byte) => Byte): Byte", "member" : "com.github.arturopala.bufferandslice.Slice.fold", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#fold(initial:T)(f:(T,T)=>T):T", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(initial: R)(f: (Byte, R) => R): R", "member" : "com.github.arturopala.bufferandslice.Slice.foldRight", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#foldRight[R](initial:R)(f:(T,R)=>R):R", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(initial: R)(f: (R, Byte) => R): R", "member" : "com.github.arturopala.bufferandslice.Slice.foldLeft", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#foldLeft[R](initial:R)(f:(R,T)=>R):R", "kind" : "final def"}, {"label" : "count", "tail" : "(pred: (Byte) => Boolean): Int", "member" : "com.github.arturopala.bufferandslice.Slice.count", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#count(pred:T=>Boolean):Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.top", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#top:Int", "kind" : "final def"}, {"label" : "apply", "tail" : "(index: Int): Byte", "member" : "com.github.arturopala.bufferandslice.Slice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#apply(index:Int):T", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (Byte) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Byte", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "empty", "tail" : "(): ByteSlice", "member" : "com.github.arturopala.bufferandslice.ByteSlice.empty", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#empty:com.github.arturopala.bufferandslice.ByteSlice", "kind" : "def"}, {"label" : "of", "tail" : "(array: Array[Byte], from: Int, to: Int): ByteSlice", "member" : "com.github.arturopala.bufferandslice.ByteSlice.of", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#of(array:Array[Byte],from:Int,to:Int):com.github.arturopala.bufferandslice.ByteSlice", "kind" : "def"}, {"label" : "of", "tail" : "(array: Array[Byte]): ByteSlice", "member" : "com.github.arturopala.bufferandslice.ByteSlice.of", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#of(array:Array[Byte]):com.github.arturopala.bufferandslice.ByteSlice", "kind" : "def"}, {"label" : "apply", "tail" : "(head: Byte, tail: Byte*): ByteSlice", "member" : "com.github.arturopala.bufferandslice.ByteSlice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#apply(head:Byte,tail:Byte*):com.github.arturopala.bufferandslice.ByteSlice", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/ByteSlice$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/arturopala\/bufferandslice\/ByteSlice.html", "kind" : "class"}, {"name" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer", "shortDescription" : "Growable, mutable array of values with deferred initialization.", "object" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html", "members_class" : [{"label" : "slice", "tail" : "(from: Int, to: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.slice", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#slice(from:Int,to:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "def"}, {"label" : "asSlice", "tail" : "(): Slice[T]", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.asSlice", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#asSlice:com.github.arturopala.bufferandslice.Slice[T]", "kind" : "def"}, {"label" : "asArray", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.asArray", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#asArray:Array[T]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#toArray[T1>:T](implicitevidence$1:scala.reflect.ClassTag[T1]):Array[T1]", "kind" : "def"}, {"label" : "emptyCopy", "tail" : "(): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.emptyCopy", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#emptyCopy:DeferredArrayBuffer.this.type", "kind" : "def"}, {"label" : "copy", "tail" : "(): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.copy", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#copy:DeferredArrayBuffer.this.type", "kind" : "def"}, {"label" : "ensureIndex", "tail" : "(index: Int): Unit", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.ensureIndex", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#ensureIndex(index:Int):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#apply(index:Int):T", "kind" : "def"}, {"label" : "emptyArray", "tail" : "(length: Int): Array[T]", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.emptyArray", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#emptyArray(length:Int):Array[T]", "kind" : "def"}, {"label" : "copyFromSelf", "tail" : "(sourceIndex: Int, targetIndex: Int, copyLength: Int): Unit", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.copyFromSelf", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#copyFromSelf(sourceIndex:Int,targetIndex:Int,copyLength:Int):Unit", "kind" : "def"}, {"label" : "copyFrom", "tail" : "(slice: Slice[T], targetIndex: Int): Unit", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.copyFrom", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#copyFrom(slice:com.github.arturopala.bufferandslice.Slice[T],targetIndex:Int):Unit", "kind" : "def"}, {"label" : "copyFrom", "tail" : "(sourceArray: Array[T], sourceIndex: Int, targetIndex: Int, copyLength: Int): Unit", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.copyFrom", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#copyFrom(sourceArray:Array[T],sourceIndex:Int,targetIndex:Int,copyLength:Int):Unit", "kind" : "def"}, {"label" : "uncheckedUpdate", "tail" : "(index: Int, value: T): Unit", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.uncheckedUpdate", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#uncheckedUpdate(index:Int,value:T):Unit", "kind" : "def"}, {"label" : "uncheckedApply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.uncheckedApply", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#uncheckedApply(index:Int):T", "kind" : "def"}, {"member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer#<init>", "error" : "unsupported entity"}, {"label" : "optimize", "tail" : "(): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.optimize", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#optimize():ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "swapRange", "tail" : "(first: Int, second: Int, swapLength: Int): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.swapRange", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#swapRange(first:Int,second:Int,swapLength:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "moveRangeLeft", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.moveRangeLeft", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#moveRangeLeft(fromIndex:Int,toIndex:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "moveRangeRight", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.moveRangeRight", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#moveRangeRight(fromIndex:Int,toIndex:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "shiftLeft", "tail" : "(index: Int, distance: Int): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftLeft", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#shiftLeft(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "shiftRight", "tail" : "(index: Int, distance: Int): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftRight", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#shiftRight(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "replaceFromSlice", "tail" : "(index: Int, slice: Slice[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.replaceFromSlice", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#replaceFromSlice(index:Int,slice:com.github.arturopala.bufferandslice.Slice[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "replaceFromArray", "tail" : "(index: Int, sourceIndex: Int, replaceLength: Int, sourceArray: Array[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.replaceFromArray", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#replaceFromArray(index:Int,sourceIndex:Int,replaceLength:Int,sourceArray:Array[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "insertSlice", "tail" : "(index: Int, slice: Slice[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.insertSlice", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#insertSlice(index:Int,slice:com.github.arturopala.bufferandslice.Slice[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "insertArray", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, sourceArray: Array[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.insertArray", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#insertArray(index:Int,sourceIndex:Int,insertLength:Int,sourceArray:Array[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.toString", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#toString():String", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: T): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.update", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#update(index:Int,value:T):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "exists", "tail" : "(pred: (T) => Boolean): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.exists", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#exists(pred:T=>Boolean):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(value: T): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.contains", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#contains(value:T):Boolean", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#reverseIterator:Iterator[T]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#iterator:Iterator[T]", "kind" : "final def"}, {"label" : "pop", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.pop", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#pop:T", "kind" : "final def"}, {"label" : "peekOption", "tail" : "(offset: Int): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.peekOption", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#peekOption(offset:Int):Option[T]", "kind" : "final def"}, {"label" : "peek", "tail" : "(offset: Int): T", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#peek(offset:Int):T", "kind" : "final def"}, {"label" : "peek", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#peek:T", "kind" : "final def"}, {"label" : "push", "tail" : "(value: T): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.push", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#push(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "store", "tail" : "(value: T): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.store", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#store(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "swap", "tail" : "(first: Int, second: Int): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.swap", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#swap(first:Int,second:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "removeWhen", "tail" : "(pred: (T) => Boolean): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.removeWhen", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#removeWhen(pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "removeRange", "tail" : "(fromIndex: Int, toIndex: Int): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.removeRange", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#removeRange(fromIndex:Int,toIndex:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "remove", "tail" : "(index: Int): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.remove", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#remove(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceFromIteratorReverse", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#replaceFromIteratorReverse(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceFromIterator", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#replaceFromIterator(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceValues", "tail" : "(index: Int, sourceIndex: Int, numberOfValues: Int, source: (Int) => T): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceValues", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#replaceValues(index:Int,sourceIndex:Int,numberOfValues:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIteratorReverse", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#insertFromIteratorReverse(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#insertFromIterator(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIteratorReverse", "tail" : "(index: Int, iterator: Iterator[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#insertFromIteratorReverse(index:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, iterator: Iterator[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#insertFromIterator(index:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertValues", "tail" : "(index: Int, sourceIndex: Int, numberOfValues: Int, source: (Int) => T): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertValues", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#insertValues(index:Int,sourceIndex:Int,numberOfValues:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "insert", "tail" : "(index: Int, value: T): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insert", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#insert(index:Int,value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "appendIterable", "tail" : "(iterable: Iterable[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendIterable", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#appendIterable(iterable:Iterable[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(numberOfValues: Int, iterator: Iterator[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#appendFromIterator(numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(iterator: Iterator[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#appendFromIterator(iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSequence", "tail" : "(values: IndexedSeq[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSequence", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#appendSequence(values:IndexedSeq[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSlice", "tail" : "(slice: Slice[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSlice", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#appendSlice(slice:com.github.arturopala.bufferandslice.Slice[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendArray", "tail" : "(values: Array[T]): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendArray", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#appendArray(values:Array[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(value: T): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.append", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#append(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.reset", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#reset:Int", "kind" : "final def"}, {"label" : "forward", "tail" : "(distance: Int): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.forward", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#forward(distance:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "rewind", "tail" : "(distance: Int): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.rewind", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#rewind(distance:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "trim", "tail" : "(size: Int): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.trim", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#trim(size:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "touch", "tail" : "(index: Int): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.touch", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#touch(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(index: Int): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.set", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#set(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyRangeWhen", "tail" : "(fromIndex: Int, toIndex: Int, map: (T) => T, pred: (T) => Boolean): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRangeWhen", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#modifyRangeWhen(fromIndex:Int,toIndex:Int,map:T=>T,pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyRange", "tail" : "(fromIndex: Int, toIndex: Int, map: (T) => T): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRange", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#modifyRange(fromIndex:Int,toIndex:Int,map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyAllWhen", "tail" : "(map: (T) => T, pred: (T) => Boolean): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyAllWhen", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#modifyAllWhen(map:T=>T,pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyAll", "tail" : "(map: (T) => T): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#modifyAll(map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (T) => K): Iterable[K]", "member" : "com.github.arturopala.bufferandslice.Buffer.map", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#map[K](f:T=>K):Iterable[K]", "kind" : "final def"}, {"label" : "mapInPlace", "tail" : "(f: (T) => T): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.mapInPlace", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#mapInPlace(f:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "modify", "tail" : "(index: Int, map: (T) => T): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modify", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#modify(index:Int,map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(index: Int): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.get", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#get(index:Int):Option[T]", "kind" : "final def"}, {"label" : "init", "tail" : "(): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.init", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#init:Buffer.this.type", "kind" : "final def"}, {"label" : "tail", "tail" : "(): DeferredArrayBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.tail", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#tail:Buffer.this.type", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#lastOption:Option[T]", "kind" : "final def"}, {"label" : "last", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.last", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#last:T", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Buffer.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#headOption:Option[T]", "kind" : "final def"}, {"label" : "head", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Buffer.head", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#head:T", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.top", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#top:Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.length", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#length:Int", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (T) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(initialLength: Int): DeferredArrayBuffer[T]", "member" : "com.github.arturopala.bufferandslice.DeferredArrayBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#apply[T](initialLength:Int):com.github.arturopala.bufferandslice.DeferredArrayBuffer[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/arturopala\/bufferandslice\/DeferredArrayBuffer.html", "kind" : "class"}, {"name" : "com.github.arturopala.bufferandslice.IndexTracker", "shortDescription" : "Set of functions to update buffers or sequences of indexes valuesin order to match corresponding buffer operations.", "object" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html", "members_object" : [{"label" : "trackSwapRange", "tail" : "(first: Int, second: Int, swapLength: Int, indexes: S): S", "member" : "com.github.arturopala.bufferandslice.IndexTracker.trackSwapRange", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#trackSwapRange[S<:Seq[Int]](first:Int,second:Int,swapLength:Int,indexes:S):S", "kind" : "final def"}, {"label" : "trackSwapRange", "tail" : "(first: Int, second: Int, swapLength: Int, indexes: IntBuffer): IntBuffer", "member" : "com.github.arturopala.bufferandslice.IndexTracker.trackSwapRange", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#trackSwapRange(first:Int,second:Int,swapLength:Int,indexes:com.github.arturopala.bufferandslice.IntBuffer):com.github.arturopala.bufferandslice.IntBuffer", "kind" : "final def"}, {"label" : "trackMoveRangeLeft", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int, indexes: S): S", "member" : "com.github.arturopala.bufferandslice.IndexTracker.trackMoveRangeLeft", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#trackMoveRangeLeft[S<:Seq[Int]](fromIndex:Int,toIndex:Int,distance:Int,indexes:S):S", "kind" : "final def"}, {"label" : "trackMoveRangeLeft", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int, indexes: IntBuffer): IntBuffer", "member" : "com.github.arturopala.bufferandslice.IndexTracker.trackMoveRangeLeft", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#trackMoveRangeLeft(fromIndex:Int,toIndex:Int,distance:Int,indexes:com.github.arturopala.bufferandslice.IntBuffer):com.github.arturopala.bufferandslice.IntBuffer", "kind" : "final def"}, {"label" : "trackMoveRangeRight", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int, indexes: S): S", "member" : "com.github.arturopala.bufferandslice.IndexTracker.trackMoveRangeRight", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#trackMoveRangeRight[S<:Seq[Int]](fromIndex:Int,toIndex:Int,distance:Int,indexes:S):S", "kind" : "final def"}, {"label" : "trackMoveRangeRight", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int, indexes: IntBuffer): IntBuffer", "member" : "com.github.arturopala.bufferandslice.IndexTracker.trackMoveRangeRight", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#trackMoveRangeRight(fromIndex:Int,toIndex:Int,distance:Int,indexes:com.github.arturopala.bufferandslice.IntBuffer):com.github.arturopala.bufferandslice.IntBuffer", "kind" : "final def"}, {"label" : "trackShiftLeft", "tail" : "(index: Int, distance: Int, indexes: S): S", "member" : "com.github.arturopala.bufferandslice.IndexTracker.trackShiftLeft", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#trackShiftLeft[S<:Seq[Int]](index:Int,distance:Int,indexes:S):S", "kind" : "final def"}, {"label" : "trackShiftLeft", "tail" : "(index: Int, distance: Int, indexes: IntBuffer): IntBuffer", "member" : "com.github.arturopala.bufferandslice.IndexTracker.trackShiftLeft", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#trackShiftLeft(index:Int,distance:Int,indexes:com.github.arturopala.bufferandslice.IntBuffer):com.github.arturopala.bufferandslice.IntBuffer", "kind" : "final def"}, {"label" : "trackShiftRight", "tail" : "(index: Int, distance: Int, indexes: S): S", "member" : "com.github.arturopala.bufferandslice.IndexTracker.trackShiftRight", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#trackShiftRight[S<:Seq[Int]](index:Int,distance:Int,indexes:S):S", "kind" : "final def"}, {"label" : "trackShiftRight", "tail" : "(index: Int, distance: Int, indexes: IntBuffer): IntBuffer", "member" : "com.github.arturopala.bufferandslice.IndexTracker.trackShiftRight", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#trackShiftRight(index:Int,distance:Int,indexes:com.github.arturopala.bufferandslice.IntBuffer):com.github.arturopala.bufferandslice.IntBuffer", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IndexTracker$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.arturopala.bufferandslice.IntBuffer", "shortDescription" : "Growable, mutable array of integers.", "object" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html", "members_class" : [{"label" : "slice", "tail" : "(from: Int, to: Int): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntBuffer.slice", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#slice(from:Int,to:Int):com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "asSlice", "tail" : "(): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntBuffer.asSlice", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#asSlice:com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "asArray", "tail" : "(): Array[Int]", "member" : "com.github.arturopala.bufferandslice.IntBuffer.asArray", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#asArray:Array[Int]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.IntBuffer.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#toArray[T1>:Int](implicitevidence$1:scala.reflect.ClassTag[T1]):Array[T1]", "kind" : "def"}, {"label" : "emptyCopy", "tail" : "(): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.IntBuffer.emptyCopy", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#emptyCopy:IntBuffer.this.type", "kind" : "def"}, {"label" : "copy", "tail" : "(): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.IntBuffer.copy", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#copy:IntBuffer.this.type", "kind" : "def"}, {"label" : "decrement", "tail" : "(index: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.IntBuffer.decrement", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#decrement(index:Int):IntBuffer.this.type", "kind" : "def"}, {"label" : "increment", "tail" : "(index: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.IntBuffer.increment", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#increment(index:Int):IntBuffer.this.type", "kind" : "def"}, {"label" : "ensureIndex", "tail" : "(index: Int): Unit", "member" : "com.github.arturopala.bufferandslice.IntBuffer.ensureIndex", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#ensureIndex(index:Int):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): Int", "member" : "com.github.arturopala.bufferandslice.IntBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#apply(index:Int):Int", "kind" : "def"}, {"label" : "emptyArray", "tail" : "(length: Int): Array[Int]", "member" : "com.github.arturopala.bufferandslice.IntBuffer.emptyArray", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#emptyArray(length:Int):Array[Int]", "kind" : "def"}, {"label" : "copyFromSelf", "tail" : "(sourceIndex: Int, targetIndex: Int, copyLength: Int): Unit", "member" : "com.github.arturopala.bufferandslice.IntBuffer.copyFromSelf", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#copyFromSelf(sourceIndex:Int,targetIndex:Int,copyLength:Int):Unit", "kind" : "def"}, {"label" : "copyFrom", "tail" : "(slice: Slice[Int], targetIndex: Int): Unit", "member" : "com.github.arturopala.bufferandslice.IntBuffer.copyFrom", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#copyFrom(slice:com.github.arturopala.bufferandslice.Slice[Int],targetIndex:Int):Unit", "kind" : "def"}, {"label" : "copyFrom", "tail" : "(sourceArray: Array[Int], sourceIndex: Int, targetIndex: Int, copyLength: Int): Unit", "member" : "com.github.arturopala.bufferandslice.IntBuffer.copyFrom", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#copyFrom(sourceArray:Array[Int],sourceIndex:Int,targetIndex:Int,copyLength:Int):Unit", "kind" : "def"}, {"label" : "uncheckedUpdate", "tail" : "(index: Int, value: Int): Unit", "member" : "com.github.arturopala.bufferandslice.IntBuffer.uncheckedUpdate", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#uncheckedUpdate(index:Int,value:Int):Unit", "kind" : "def"}, {"label" : "uncheckedApply", "tail" : "(index: Int): Int", "member" : "com.github.arturopala.bufferandslice.IntBuffer.uncheckedApply", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#uncheckedApply(index:Int):Int", "kind" : "def"}, {"member" : "com.github.arturopala.bufferandslice.IntBuffer#<init>", "error" : "unsupported entity"}, {"label" : "optimize", "tail" : "(): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.optimize", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#optimize():ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "swapRange", "tail" : "(first: Int, second: Int, swapLength: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.swapRange", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#swapRange(first:Int,second:Int,swapLength:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "moveRangeLeft", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.moveRangeLeft", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#moveRangeLeft(fromIndex:Int,toIndex:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "moveRangeRight", "tail" : "(fromIndex: Int, toIndex: Int, distance: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.moveRangeRight", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#moveRangeRight(fromIndex:Int,toIndex:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "shiftLeft", "tail" : "(index: Int, distance: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftLeft", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#shiftLeft(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "shiftRight", "tail" : "(index: Int, distance: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.shiftRight", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#shiftRight(index:Int,distance:Int):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "replaceFromSlice", "tail" : "(index: Int, slice: Slice[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.replaceFromSlice", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#replaceFromSlice(index:Int,slice:com.github.arturopala.bufferandslice.Slice[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "replaceFromArray", "tail" : "(index: Int, sourceIndex: Int, replaceLength: Int, sourceArray: Array[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.replaceFromArray", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#replaceFromArray(index:Int,sourceIndex:Int,replaceLength:Int,sourceArray:Array[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "insertSlice", "tail" : "(index: Int, slice: Slice[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.insertSlice", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#insertSlice(index:Int,slice:com.github.arturopala.bufferandslice.Slice[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "insertArray", "tail" : "(index: Int, sourceIndex: Int, insertLength: Int, sourceArray: Array[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.insertArray", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#insertArray(index:Int,sourceIndex:Int,insertLength:Int,sourceArray:Array[T]):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.toString", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#toString():String", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.ArrayBufferLike.update", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#update(index:Int,value:T):ArrayBufferLike.this.type", "kind" : "final def"}, {"label" : "exists", "tail" : "(pred: (Int) => Boolean): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.exists", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#exists(pred:T=>Boolean):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(value: Int): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.contains", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#contains(value:T):Boolean", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Buffer.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#reverseIterator:Iterator[T]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Buffer.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#iterator:Iterator[T]", "kind" : "final def"}, {"label" : "pop", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.pop", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#pop:T", "kind" : "final def"}, {"label" : "peekOption", "tail" : "(offset: Int): Option[Int]", "member" : "com.github.arturopala.bufferandslice.Buffer.peekOption", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#peekOption(offset:Int):Option[T]", "kind" : "final def"}, {"label" : "peek", "tail" : "(offset: Int): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#peek(offset:Int):T", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.peek", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#peek:T", "kind" : "final def"}, {"label" : "push", "tail" : "(value: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.push", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#push(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "store", "tail" : "(value: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.store", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#store(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "swap", "tail" : "(first: Int, second: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.swap", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#swap(first:Int,second:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "removeWhen", "tail" : "(pred: (Int) => Boolean): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.removeWhen", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#removeWhen(pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "removeRange", "tail" : "(fromIndex: Int, toIndex: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.removeRange", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#removeRange(fromIndex:Int,toIndex:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "remove", "tail" : "(index: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.remove", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#remove(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceFromIteratorReverse", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#replaceFromIteratorReverse(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceFromIterator", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#replaceFromIterator(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "replaceValues", "tail" : "(index: Int, sourceIndex: Int, numberOfValues: Int, source: (Int) => Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.replaceValues", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#replaceValues(index:Int,sourceIndex:Int,numberOfValues:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIteratorReverse", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#insertFromIteratorReverse(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, numberOfValues: Int, iterator: Iterator[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#insertFromIterator(index:Int,numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIteratorReverse", "tail" : "(index: Int, iterator: Iterator[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIteratorReverse", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#insertFromIteratorReverse(index:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertFromIterator", "tail" : "(index: Int, iterator: Iterator[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#insertFromIterator(index:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "insertValues", "tail" : "(index: Int, sourceIndex: Int, numberOfValues: Int, source: (Int) => Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insertValues", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#insertValues(index:Int,sourceIndex:Int,numberOfValues:Int,source:Int=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "insert", "tail" : "(index: Int, value: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.insert", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#insert(index:Int,value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "appendIterable", "tail" : "(iterable: Iterable[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendIterable", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#appendIterable(iterable:Iterable[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(numberOfValues: Int, iterator: Iterator[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#appendFromIterator(numberOfValues:Int,iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendFromIterator", "tail" : "(iterator: Iterator[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendFromIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#appendFromIterator(iterator:Iterator[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSequence", "tail" : "(values: IndexedSeq[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSequence", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#appendSequence(values:IndexedSeq[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendSlice", "tail" : "(slice: Slice[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendSlice", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#appendSlice(slice:com.github.arturopala.bufferandslice.Slice[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "appendArray", "tail" : "(values: Array[Int]): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.appendArray", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#appendArray(values:Array[T]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(value: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.append", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#append(value:T):Buffer.this.type", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.reset", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#reset:Int", "kind" : "final def"}, {"label" : "forward", "tail" : "(distance: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.forward", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#forward(distance:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "rewind", "tail" : "(distance: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.rewind", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#rewind(distance:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "trim", "tail" : "(size: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.trim", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#trim(size:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "touch", "tail" : "(index: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.touch", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#touch(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(index: Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.set", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#set(index:Int):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyRangeWhen", "tail" : "(fromIndex: Int, toIndex: Int, map: (Int) => Int, pred: (Int) => Boolean): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRangeWhen", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#modifyRangeWhen(fromIndex:Int,toIndex:Int,map:T=>T,pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyRange", "tail" : "(fromIndex: Int, toIndex: Int, map: (Int) => Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyRange", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#modifyRange(fromIndex:Int,toIndex:Int,map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyAllWhen", "tail" : "(map: (Int) => Int, pred: (Int) => Boolean): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyAllWhen", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#modifyAllWhen(map:T=>T,pred:T=>Boolean):Buffer.this.type", "kind" : "final def"}, {"label" : "modifyAll", "tail" : "(map: (Int) => Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#modifyAll(map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Int) => K): Iterable[K]", "member" : "com.github.arturopala.bufferandslice.Buffer.map", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#map[K](f:T=>K):Iterable[K]", "kind" : "final def"}, {"label" : "mapInPlace", "tail" : "(f: (Int) => Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.mapInPlace", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#mapInPlace(f:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "modify", "tail" : "(index: Int, map: (Int) => Int): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.modify", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#modify(index:Int,map:T=>T):Buffer.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(index: Int): Option[Int]", "member" : "com.github.arturopala.bufferandslice.Buffer.get", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#get(index:Int):Option[T]", "kind" : "final def"}, {"label" : "init", "tail" : "(): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.init", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#init:Buffer.this.type", "kind" : "final def"}, {"label" : "tail", "tail" : "(): IntBuffer.this.type", "member" : "com.github.arturopala.bufferandslice.Buffer.tail", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#tail:Buffer.this.type", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Int]", "member" : "com.github.arturopala.bufferandslice.Buffer.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#lastOption:Option[T]", "kind" : "final def"}, {"label" : "last", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.last", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#last:T", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[Int]", "member" : "com.github.arturopala.bufferandslice.Buffer.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#headOption:Option[T]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.head", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#head:T", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.top", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#top:Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Buffer.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Buffer.length", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#length:Int", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (Int) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Int", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "empty", "tail" : "(): IntBuffer", "member" : "com.github.arturopala.bufferandslice.IntBuffer.empty", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#empty:com.github.arturopala.bufferandslice.IntBuffer", "kind" : "def"}, {"label" : "apply", "tail" : "(array: Array[Int]): IntBuffer", "member" : "com.github.arturopala.bufferandslice.IntBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#apply(array:Array[Int]):com.github.arturopala.bufferandslice.IntBuffer", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Int*): IntBuffer", "member" : "com.github.arturopala.bufferandslice.IntBuffer.apply", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#apply(elems:Int*):com.github.arturopala.bufferandslice.IntBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntBuffer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/arturopala\/bufferandslice\/IntBuffer.html", "kind" : "class"}, {"name" : "com.github.arturopala.bufferandslice.IntSlice", "shortDescription" : "Lazy, specialized slice of the array of integers.", "object" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html", "members_class" : [{"label" : "min", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.IntSlice.min", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#min:Int", "kind" : "def"}, {"label" : "max", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.IntSlice.max", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#max:Int", "kind" : "def"}, {"label" : "sum", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.IntSlice.sum", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#sum:Int", "kind" : "def"}, {"label" : "asBuffer", "tail" : "(): IntBuffer", "member" : "com.github.arturopala.bufferandslice.IntSlice.asBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#asBuffer:com.github.arturopala.bufferandslice.IntBuffer", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[T1]", "member" : "com.github.arturopala.bufferandslice.IntSlice.toBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#toBuffer[T1>:Int]:com.github.arturopala.bufferandslice.Buffer[T1]", "kind" : "def"}, {"label" : "wrap", "tail" : "(fromIndex: Int, toIndex: Int, array: Array[Int], detached: Boolean): IntSlice.this.type", "member" : "com.github.arturopala.bufferandslice.IntSlice.wrap", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#wrap(fromIndex:Int,toIndex:Int,array:Array[Int],detached:Boolean):IntSlice.this.type", "kind" : "def"}, {"label" : "detached", "tail" : ": Boolean", "member" : "com.github.arturopala.bufferandslice.IntSlice.detached", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#detached:Boolean", "kind" : "val"}, {"label" : "array", "tail" : ": Array[Int]", "member" : "com.github.arturopala.bufferandslice.IntSlice.array", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#array:Array[Int]", "kind" : "val"}, {"label" : "toIndex", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.IntSlice.toIndex", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#toIndex:Int", "kind" : "val"}, {"label" : "fromIndex", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.IntSlice.fromIndex", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#fromIndex:Int", "kind" : "val"}, {"label" : "detach", "tail" : "(): IntSlice.this.type", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.detach", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#detach:ArraySliceLike.this.type", "kind" : "final def"}, {"label" : "copyToArray", "tail" : "(targetIndex: Int, targetArray: Array[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.copyToArray", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#copyToArray[T1>:T](targetIndex:Int,targetArray:Array[T1]):Array[T1]", "kind" : "final def"}, {"label" : "asArray", "tail" : "(): Array[Int]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.asArray", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#asArray:Array[T]", "kind" : "final def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#toArray[T1>:T](implicitevidence$1:scala.reflect.ClassTag[T1]):Array[T1]", "kind" : "final def"}, {"label" : "slice", "tail" : "(from: Int, to: Int): IntSlice.this.type", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.slice", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#slice(from:Int,to:Int):ArraySliceLike.this.type", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Int) => K): Slice[K]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.map", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#map[K](f:T=>K):com.github.arturopala.bufferandslice.Slice[K]", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: T1): Slice[T1]", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.update", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#update[T1>:T](index:Int,value:T1):com.github.arturopala.bufferandslice.Slice[T1]", "kind" : "final def"}, {"label" : "read", "tail" : "(index: Int): Int", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.read", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#read(index:Int):T", "kind" : "final def"}, {"label" : "length", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.ArraySliceLike.length", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#length:Int", "kind" : "final val"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.equals", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#equals(obj:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.Slice.toString", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#toString():String", "kind" : "final def"}, {"label" : "asIterable", "tail" : "(): Iterable[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.asIterable", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#asIterable:Iterable[T]", "kind" : "final def"}, {"label" : "toSeq", "tail" : "(): Seq[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.toSeq", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#toSeq:Seq[T]", "kind" : "final def"}, {"label" : "toList", "tail" : "(): List[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.toList", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#toList:List[T]", "kind" : "final def"}, {"label" : "reverseIndexIterator", "tail" : "(pred: (Int) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIndexIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#reverseIndexIterator(pred:T=>Boolean):Iterator[Int]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(pred: (Int) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#reverseIterator(pred:T=>Boolean):Iterator[T]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#reverseIterator:Iterator[T]", "kind" : "final def"}, {"label" : "indexIterator", "tail" : "(pred: (Int) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.indexIterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#indexIterator(pred:T=>Boolean):Iterator[Int]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(pred: (Int) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#iterator(pred:T=>Boolean):Iterator[T]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#iterator:Iterator[T]", "kind" : "final def"}, {"label" : "dropRight", "tail" : "(n: Int): IntSlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.dropRight", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#dropRight(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Int): IntSlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.drop", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#drop(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "takeRight", "tail" : "(n: Int): IntSlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.takeRight", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#takeRight(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Int): IntSlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.take", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#take(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "init", "tail" : "(): IntSlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.init", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#init:Slice.this.type", "kind" : "final def"}, {"label" : "tail", "tail" : "(): IntSlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.tail", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#tail:Slice.this.type", "kind" : "final def"}, {"label" : "exists", "tail" : "(pred: (Int) => Boolean): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.exists", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#exists(pred:T=>Boolean):Boolean", "kind" : "final def"}, {"label" : "find", "tail" : "(pred: (Int) => Boolean): Option[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.find", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#find(pred:T=>Boolean):Option[T]", "kind" : "final def"}, {"label" : "get", "tail" : "(index: Int): Option[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.get", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#get(index:Int):Option[T]", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#lastOption:Option[T]", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#headOption:Option[T]", "kind" : "final def"}, {"label" : "last", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.last", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#last:T", "kind" : "final def"}, {"label" : "head", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.head", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#head:T", "kind" : "final def"}, {"label" : "reduce", "tail" : "(f: (Int, Int) => Int): Int", "member" : "com.github.arturopala.bufferandslice.Slice.reduce", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#reduce(f:(T,T)=>T):T", "kind" : "final def"}, {"label" : "fold", "tail" : "(initial: Int)(f: (Int, Int) => Int): Int", "member" : "com.github.arturopala.bufferandslice.Slice.fold", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#fold(initial:T)(f:(T,T)=>T):T", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(initial: R)(f: (Int, R) => R): R", "member" : "com.github.arturopala.bufferandslice.Slice.foldRight", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#foldRight[R](initial:R)(f:(T,R)=>R):R", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(initial: R)(f: (R, Int) => R): R", "member" : "com.github.arturopala.bufferandslice.Slice.foldLeft", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#foldLeft[R](initial:R)(f:(R,T)=>R):R", "kind" : "final def"}, {"label" : "count", "tail" : "(pred: (Int) => Boolean): Int", "member" : "com.github.arturopala.bufferandslice.Slice.count", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#count(pred:T=>Boolean):Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.top", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#top:Int", "kind" : "final def"}, {"label" : "apply", "tail" : "(index: Int): Int", "member" : "com.github.arturopala.bufferandslice.Slice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#apply(index:Int):T", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (Int) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Int", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "empty", "tail" : "(): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.empty", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#empty:com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "of", "tail" : "(array: Array[Int], from: Int, to: Int): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.of", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#of(array:Array[Int],from:Int,to:Int):com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "of", "tail" : "(array: Array[Int]): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.of", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#of(array:Array[Int]):com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "apply", "tail" : "(head: Int, tail: Int*): IntSlice", "member" : "com.github.arturopala.bufferandslice.IntSlice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#apply(head:Int,tail:Int*):com.github.arturopala.bufferandslice.IntSlice", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/IntSlice$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/arturopala\/bufferandslice\/IntSlice.html", "kind" : "class"}, {"name" : "com.github.arturopala.bufferandslice.LazyMapArraySlice", "shortDescription" : "Lazily mapped slice of an underlying array.", "object" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html", "members_class" : [{"label" : "asBuffer", "tail" : "(): Buffer[T]", "member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.asBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#asBuffer:com.github.arturopala.bufferandslice.Buffer[T]", "kind" : "final def"}, {"label" : "toBuffer", "tail" : "(): Buffer[T1]", "member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.toBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#toBuffer[T1>:T]:com.github.arturopala.bufferandslice.Buffer[T1]", "kind" : "final def"}, {"label" : "copyToArray", "tail" : "(targetIndex: Int, targetArray: Array[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.copyToArray", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#copyToArray[T1>:T](targetIndex:Int,targetArray:Array[T1]):Array[T1]", "kind" : "final def"}, {"label" : "detach", "tail" : "(): LazyMapArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.detach", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#detach:LazyMapArraySlice.this.type", "kind" : "final def"}, {"label" : "asArray", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.asArray", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#asArray:Array[T]", "kind" : "final def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#toArray[T1>:T](implicitevidence$1:scala.reflect.ClassTag[T1]):Array[T1]", "kind" : "final def"}, {"label" : "slice", "tail" : "(from: Int, to: Int): LazyMapArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.slice", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#slice(from:Int,to:Int):LazyMapArraySlice.this.type", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (T) => K): LazyMapArraySlice[K]", "member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.map", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#map[K](f:T=>K):com.github.arturopala.bufferandslice.LazyMapArraySlice[K]", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Int, value: T1): Slice[T1]", "member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.update", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#update[T1>:T](index:Int,value:T1):com.github.arturopala.bufferandslice.Slice[T1]", "kind" : "final def"}, {"label" : "read", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.read", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#read(index:Int):T", "kind" : "final def"}, {"label" : "length", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.length", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#length:Int", "kind" : "final val"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.equals", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#equals(obj:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.Slice.toString", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#toString():String", "kind" : "final def"}, {"label" : "asIterable", "tail" : "(): Iterable[T]", "member" : "com.github.arturopala.bufferandslice.Slice.asIterable", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#asIterable:Iterable[T]", "kind" : "final def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "com.github.arturopala.bufferandslice.Slice.toSeq", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#toSeq:Seq[T]", "kind" : "final def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "com.github.arturopala.bufferandslice.Slice.toList", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#toList:List[T]", "kind" : "final def"}, {"label" : "reverseIndexIterator", "tail" : "(pred: (T) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIndexIterator", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#reverseIndexIterator(pred:T=>Boolean):Iterator[Int]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(pred: (T) => Boolean): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#reverseIterator(pred:T=>Boolean):Iterator[T]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#reverseIterator:Iterator[T]", "kind" : "final def"}, {"label" : "indexIterator", "tail" : "(pred: (T) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.indexIterator", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#indexIterator(pred:T=>Boolean):Iterator[Int]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(pred: (T) => Boolean): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#iterator(pred:T=>Boolean):Iterator[T]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#iterator:Iterator[T]", "kind" : "final def"}, {"label" : "dropRight", "tail" : "(n: Int): LazyMapArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.dropRight", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#dropRight(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Int): LazyMapArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.drop", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#drop(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "takeRight", "tail" : "(n: Int): LazyMapArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.takeRight", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#takeRight(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Int): LazyMapArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.take", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#take(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "init", "tail" : "(): LazyMapArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.init", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#init:Slice.this.type", "kind" : "final def"}, {"label" : "tail", "tail" : "(): LazyMapArraySlice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.tail", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#tail:Slice.this.type", "kind" : "final def"}, {"label" : "exists", "tail" : "(pred: (T) => Boolean): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.exists", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#exists(pred:T=>Boolean):Boolean", "kind" : "final def"}, {"label" : "find", "tail" : "(pred: (T) => Boolean): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.find", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#find(pred:T=>Boolean):Option[T]", "kind" : "final def"}, {"label" : "get", "tail" : "(index: Int): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.get", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#get(index:Int):Option[T]", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#lastOption:Option[T]", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#headOption:Option[T]", "kind" : "final def"}, {"label" : "last", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Slice.last", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#last:T", "kind" : "final def"}, {"label" : "head", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Slice.head", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#head:T", "kind" : "final def"}, {"label" : "reduce", "tail" : "(f: (T, T) => T): T", "member" : "com.github.arturopala.bufferandslice.Slice.reduce", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#reduce(f:(T,T)=>T):T", "kind" : "final def"}, {"label" : "fold", "tail" : "(initial: T)(f: (T, T) => T): T", "member" : "com.github.arturopala.bufferandslice.Slice.fold", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#fold(initial:T)(f:(T,T)=>T):T", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(initial: R)(f: (T, R) => R): R", "member" : "com.github.arturopala.bufferandslice.Slice.foldRight", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#foldRight[R](initial:R)(f:(T,R)=>R):R", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(initial: R)(f: (R, T) => R): R", "member" : "com.github.arturopala.bufferandslice.Slice.foldLeft", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#foldLeft[R](initial:R)(f:(R,T)=>R):R", "kind" : "final def"}, {"label" : "count", "tail" : "(pred: (T) => Boolean): Int", "member" : "com.github.arturopala.bufferandslice.Slice.count", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#count(pred:T=>Boolean):Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.top", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#top:Int", "kind" : "final def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.Slice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#apply(index:Int):T", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (T) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "mapF", "tail" : ": (A) => T", "member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.mapF", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#mapF:LazyMapArraySlice.this.A=>T", "kind" : "abstract val"}, {"label" : "array", "tail" : ": Array[A]", "member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.array", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html#array:Array[LazyMapArraySlice.this.A]", "kind" : "abstract val"}, {"member" : "com.github.arturopala.bufferandslice.LazyMapArraySlice.A", "error" : "unsupported entity"}], "members_object" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/arturopala\/bufferandslice\/LazyMapArraySlice.html", "kind" : "class"}, {"name" : "com.github.arturopala.bufferandslice.Slice", "object" : "com\/github\/arturopala\/bufferandslice\/Slice$.html", "members_object" : [{"label" : "empty", "tail" : "(): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.empty", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#empty[T]:com.github.arturopala.bufferandslice.Slice[T]", "kind" : "def"}, {"label" : "of", "tail" : "(array: Array[T], from: Int, to: Int): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.of", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#of[T](array:Array[T],from:Int,to:Int):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "def"}, {"label" : "of", "tail" : "(array: Array[T]): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.of", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#of[T](array:Array[T]):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(head: T, tail: T*): Slice[T]", "member" : "com.github.arturopala.bufferandslice.Slice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#apply[T](head:T,tail:T*):com.github.arturopala.bufferandslice.Slice[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Slice$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/arturopala\/bufferandslice\/Slice.html", "kind" : "trait", "members_trait" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.hashCode", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.equals", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#equals(obj:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.arturopala.bufferandslice.Slice.toString", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#toString():String", "kind" : "final def"}, {"label" : "asIterable", "tail" : "(): Iterable[T]", "member" : "com.github.arturopala.bufferandslice.Slice.asIterable", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#asIterable:Iterable[T]", "kind" : "final def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "com.github.arturopala.bufferandslice.Slice.toSeq", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#toSeq:Seq[T]", "kind" : "final def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "com.github.arturopala.bufferandslice.Slice.toList", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#toList:List[T]", "kind" : "final def"}, {"label" : "reverseIndexIterator", "tail" : "(pred: (T) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIndexIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#reverseIndexIterator(pred:T=>Boolean):Iterator[Int]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(pred: (T) => Boolean): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#reverseIterator(pred:T=>Boolean):Iterator[T]", "kind" : "final def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.reverseIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#reverseIterator:Iterator[T]", "kind" : "final def"}, {"label" : "indexIterator", "tail" : "(pred: (T) => Boolean): Iterator[Int]", "member" : "com.github.arturopala.bufferandslice.Slice.indexIterator", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#indexIterator(pred:T=>Boolean):Iterator[Int]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(pred: (T) => Boolean): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#iterator(pred:T=>Boolean):Iterator[T]", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[T]", "member" : "com.github.arturopala.bufferandslice.Slice.iterator", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#iterator:Iterator[T]", "kind" : "final def"}, {"label" : "dropRight", "tail" : "(n: Int): Slice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.dropRight", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#dropRight(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Int): Slice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.drop", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#drop(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "takeRight", "tail" : "(n: Int): Slice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.takeRight", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#takeRight(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Int): Slice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.take", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#take(n:Int):Slice.this.type", "kind" : "final def"}, {"label" : "init", "tail" : "(): Slice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.init", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#init:Slice.this.type", "kind" : "final def"}, {"label" : "tail", "tail" : "(): Slice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.tail", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#tail:Slice.this.type", "kind" : "final def"}, {"label" : "exists", "tail" : "(pred: (T) => Boolean): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.exists", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#exists(pred:T=>Boolean):Boolean", "kind" : "final def"}, {"label" : "find", "tail" : "(pred: (T) => Boolean): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.find", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#find(pred:T=>Boolean):Option[T]", "kind" : "final def"}, {"label" : "get", "tail" : "(index: Int): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.get", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#get(index:Int):Option[T]", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.lastOption", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#lastOption:Option[T]", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "com.github.arturopala.bufferandslice.Slice.headOption", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#headOption:Option[T]", "kind" : "final def"}, {"label" : "last", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Slice.last", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#last:T", "kind" : "final def"}, {"label" : "head", "tail" : "(): T", "member" : "com.github.arturopala.bufferandslice.Slice.head", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#head:T", "kind" : "final def"}, {"label" : "reduce", "tail" : "(f: (T, T) => T): T", "member" : "com.github.arturopala.bufferandslice.Slice.reduce", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#reduce(f:(T,T)=>T):T", "kind" : "final def"}, {"label" : "fold", "tail" : "(initial: T)(f: (T, T) => T): T", "member" : "com.github.arturopala.bufferandslice.Slice.fold", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#fold(initial:T)(f:(T,T)=>T):T", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(initial: R)(f: (T, R) => R): R", "member" : "com.github.arturopala.bufferandslice.Slice.foldRight", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#foldRight[R](initial:R)(f:(T,R)=>R):R", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(initial: R)(f: (R, T) => R): R", "member" : "com.github.arturopala.bufferandslice.Slice.foldLeft", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#foldLeft[R](initial:R)(f:(R,T)=>R):R", "kind" : "final def"}, {"label" : "count", "tail" : "(pred: (T) => Boolean): Int", "member" : "com.github.arturopala.bufferandslice.Slice.count", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#count(pred:T=>Boolean):Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.nonEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.github.arturopala.bufferandslice.Slice.isEmpty", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "top", "tail" : "(): Int", "member" : "com.github.arturopala.bufferandslice.Slice.top", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#top:Int", "kind" : "final def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.Slice.apply", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#apply(index:Int):T", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (T) => A): (Int) => A", "member" : "scala.Function1.andThen", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "asBuffer", "tail" : "(): Buffer[T]", "member" : "com.github.arturopala.bufferandslice.Slice.asBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#asBuffer:com.github.arturopala.bufferandslice.Buffer[T]", "kind" : "abstract def"}, {"label" : "toBuffer", "tail" : "(): Buffer[T1]", "member" : "com.github.arturopala.bufferandslice.Slice.toBuffer", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#toBuffer[T1>:T]:com.github.arturopala.bufferandslice.Buffer[T1]", "kind" : "abstract def"}, {"label" : "copyToArray", "tail" : "(targetIndex: Int, targetArray: Array[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.Slice.copyToArray", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#copyToArray[T1>:T](targetIndex:Int,targetArray:Array[T1]):Array[T1]", "kind" : "abstract def"}, {"label" : "detach", "tail" : "(): Slice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.detach", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#detach:Slice.this.type", "kind" : "abstract def"}, {"label" : "asArray", "tail" : "(): Array[T]", "member" : "com.github.arturopala.bufferandslice.Slice.asArray", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#asArray:Array[T]", "kind" : "abstract def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[T1]): Array[T1]", "member" : "com.github.arturopala.bufferandslice.Slice.toArray", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#toArray[T1>:T](implicitevidence$1:scala.reflect.ClassTag[T1]):Array[T1]", "kind" : "abstract def"}, {"label" : "slice", "tail" : "(from: Int, to: Int): Slice.this.type", "member" : "com.github.arturopala.bufferandslice.Slice.slice", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#slice(from:Int,to:Int):Slice.this.type", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (T) => K): Slice[K]", "member" : "com.github.arturopala.bufferandslice.Slice.map", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#map[K](f:T=>K):com.github.arturopala.bufferandslice.Slice[K]", "kind" : "abstract def"}, {"label" : "length", "tail" : ": Int", "member" : "com.github.arturopala.bufferandslice.Slice.length", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#length:Int", "kind" : "abstract val"}, {"label" : "update", "tail" : "(index: Int, value: T1): Slice[T1]", "member" : "com.github.arturopala.bufferandslice.Slice.update", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#update[T1>:T](index:Int,value:T1):com.github.arturopala.bufferandslice.Slice[T1]", "kind" : "abstract def"}, {"label" : "read", "tail" : "(index: Int): T", "member" : "com.github.arturopala.bufferandslice.Slice.read", "link" : "com\/github\/arturopala\/bufferandslice\/Slice.html#read(index:Int):T", "kind" : "abstract def"}], "shortDescription" : "Lazy and immutable slice of a sequence of values."}]};